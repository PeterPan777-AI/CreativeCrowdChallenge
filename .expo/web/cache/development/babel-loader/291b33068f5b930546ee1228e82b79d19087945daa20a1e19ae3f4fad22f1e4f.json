{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Feather } from '@expo/vector-icons';\nimport * as ImagePicker from 'expo-image-picker';\nimport { useAuth } from \"../context/AuthContext\";\nimport supabase from \"../utils/supabaseClient\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SubmissionScreen(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _route$params = route.params,\n    competitionId = _route$params.competitionId,\n    competitionTitle = _route$params.competitionTitle;\n  var _useAuth = useAuth(),\n    user = _useAuth.user;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    title = _useState2[0],\n    setTitle = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    description = _useState4[0],\n    setDescription = _useState4[1];\n  var _useState5 = useState('photo'),\n    _useState6 = _slicedToArray(_useState5, 2),\n    mediaType = _useState6[0],\n    setMediaType = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedMedia = _useState8[0],\n    setSelectedMedia = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    textContent = _useState10[0],\n    setTextContent = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    loading = _useState12[0],\n    setLoading = _useState12[1];\n  var validateForm = function validateForm() {\n    if (!title.trim()) return 'Please enter a title for your submission';\n    if (!description.trim()) return 'Please provide a description';\n    if (mediaType === 'photo' && !selectedMedia) {\n      return 'Please select a photo for your submission';\n    }\n    if (mediaType === 'video' && !selectedMedia) {\n      return 'Please select a video for your submission';\n    }\n    if (mediaType === 'text' && !textContent.trim()) {\n      return 'Please enter text content for your submission';\n    }\n    return null;\n  };\n  var pickImage = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var permissionResult = yield ImagePicker.requestMediaLibraryPermissionsAsync();\n      if (!permissionResult.granted) {\n        Alert.alert('Permission Required', 'We need your permission to access the media library');\n        return;\n      }\n      var result = yield ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 0.8\n      });\n      if (!result.canceled && result.assets && result.assets[0]) {\n        setSelectedMedia(result.assets[0]);\n      }\n    });\n    return function pickImage() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var pickVideo = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      var permissionResult = yield ImagePicker.requestMediaLibraryPermissionsAsync();\n      if (!permissionResult.granted) {\n        Alert.alert('Permission Required', 'We need your permission to access the media library');\n        return;\n      }\n      var result = yield ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Videos,\n        allowsEditing: true,\n        aspect: [16, 9],\n        quality: 0.8,\n        videoMaxDuration: 60\n      });\n      if (!result.canceled && result.assets && result.assets[0]) {\n        setSelectedMedia(result.assets[0]);\n      }\n    });\n    return function pickVideo() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var uploadMedia = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      if (!selectedMedia) return null;\n      try {\n        var fileExt = selectedMedia.uri.split('.').pop();\n        var fileName = `${user.id}-${Date.now()}.${fileExt}`;\n        var filePath = `submissions/${fileName}`;\n        var response = yield fetch(selectedMedia.uri);\n        var blob = yield response.blob();\n        var _yield$supabase$stora = yield supabase.storage.from('media').upload(filePath, blob, {\n            contentType: selectedMedia.type\n          }),\n          data = _yield$supabase$stora.data,\n          error = _yield$supabase$stora.error;\n        if (error) throw error;\n        var _supabase$storage$fro = supabase.storage.from('media').getPublicUrl(filePath),\n          urlData = _supabase$storage$fro.data;\n        return urlData.publicUrl;\n      } catch (error) {\n        console.error('Error uploading media:', error);\n        throw error;\n      }\n    });\n    return function uploadMedia() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var handleSubmit = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      var validationError = validateForm();\n      if (validationError) {\n        Alert.alert('Validation Error', validationError);\n        return;\n      }\n      try {\n        setLoading(true);\n        var mediaUrl = null;\n        if (mediaType !== 'text' && selectedMedia) {\n          mediaUrl = yield uploadMedia();\n        }\n        var submissionData = {\n          competition_id: competitionId,\n          user_id: user.id,\n          title: title,\n          description: description,\n          media_type: mediaType,\n          media_url: mediaUrl,\n          text_content: mediaType === 'text' ? textContent : null,\n          created_at: new Date()\n        };\n        var _yield$supabase$from$ = yield supabase.from('submissions').insert([submissionData]).select(),\n          data = _yield$supabase$from$.data,\n          error = _yield$supabase$from$.error;\n        if (error) throw error;\n        Alert.alert('Success', 'Your submission has been received!', [{\n          text: 'OK',\n          onPress: function onPress() {\n            return navigation.goBack();\n          }\n        }]);\n      } catch (error) {\n        console.error('Error submitting:', error);\n        Alert.alert('Error', 'Failed to submit your entry. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleSubmit() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  return _jsx(KeyboardAvoidingView, {\n    behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n    className: \"flex-1\",\n    children: _jsx(ScrollView, {\n      className: \"flex-1 bg-background\",\n      children: _jsxs(View, {\n        className: \"p-4\",\n        children: [_jsx(Text, {\n          className: \"text-2xl font-bold text-gray-800 mb-2\",\n          children: \"Submit Your Entry\"\n        }), _jsxs(Text, {\n          className: \"text-gray-600 mb-6\",\n          children: [\"for \\\"\", competitionTitle, \"\\\"\"]\n        }), _jsxs(View, {\n          className: \"space-y-4\",\n          children: [_jsxs(View, {\n            children: [_jsx(Text, {\n              className: \"text-gray-700 mb-1 font-medium\",\n              children: \"Title\"\n            }), _jsx(TextInput, {\n              className: \"bg-white border border-gray-300 rounded-lg px-4 py-3 text-gray-800\",\n              placeholder: \"Enter a title for your submission\",\n              value: title,\n              onChangeText: setTitle\n            })]\n          }), _jsxs(View, {\n            children: [_jsx(Text, {\n              className: \"text-gray-700 mb-1 font-medium\",\n              children: \"Description\"\n            }), _jsx(TextInput, {\n              className: \"bg-white border border-gray-300 rounded-lg px-4 py-3 text-gray-800\",\n              placeholder: \"Describe your submission\",\n              value: description,\n              onChangeText: setDescription,\n              multiline: true,\n              numberOfLines: 3,\n              textAlignVertical: \"top\"\n            })]\n          }), _jsxs(View, {\n            children: [_jsx(Text, {\n              className: \"text-gray-700 mb-2 font-medium\",\n              children: \"Submission Type\"\n            }), _jsxs(View, {\n              className: \"flex-row space-x-4\",\n              children: [_jsxs(TouchableOpacity, {\n                className: `flex-1 border rounded-lg py-3 items-center ${mediaType === 'photo' ? 'bg-primary border-primary' : 'bg-white border-gray-300'}`,\n                onPress: function onPress() {\n                  return setMediaType('photo');\n                },\n                children: [_jsx(Feather, {\n                  name: \"image\",\n                  size: 20,\n                  color: mediaType === 'photo' ? 'white' : '#4B5563'\n                }), _jsx(Text, {\n                  className: `mt-1 ${mediaType === 'photo' ? 'text-white' : 'text-gray-700'}`,\n                  children: \"Photo\"\n                })]\n              }), _jsxs(TouchableOpacity, {\n                className: `flex-1 border rounded-lg py-3 items-center ${mediaType === 'video' ? 'bg-primary border-primary' : 'bg-white border-gray-300'}`,\n                onPress: function onPress() {\n                  return setMediaType('video');\n                },\n                children: [_jsx(Feather, {\n                  name: \"film\",\n                  size: 20,\n                  color: mediaType === 'video' ? 'white' : '#4B5563'\n                }), _jsx(Text, {\n                  className: `mt-1 ${mediaType === 'video' ? 'text-white' : 'text-gray-700'}`,\n                  children: \"Video\"\n                })]\n              }), _jsxs(TouchableOpacity, {\n                className: `flex-1 border rounded-lg py-3 items-center ${mediaType === 'text' ? 'bg-primary border-primary' : 'bg-white border-gray-300'}`,\n                onPress: function onPress() {\n                  return setMediaType('text');\n                },\n                children: [_jsx(Feather, {\n                  name: \"file-text\",\n                  size: 20,\n                  color: mediaType === 'text' ? 'white' : '#4B5563'\n                }), _jsx(Text, {\n                  className: `mt-1 ${mediaType === 'text' ? 'text-white' : 'text-gray-700'}`,\n                  children: \"Text\"\n                })]\n              })]\n            })]\n          }), mediaType === 'photo' && _jsxs(View, {\n            children: [_jsx(Text, {\n              className: \"text-gray-700 mb-2 font-medium\",\n              children: \"Upload Photo\"\n            }), selectedMedia ? _jsxs(View, {\n              className: \"rounded-lg overflow-hidden mb-2\",\n              children: [_jsx(Image, {\n                source: {\n                  uri: selectedMedia.uri\n                },\n                className: \"w-full h-64 bg-gray-200\",\n                resizeMode: \"cover\"\n              }), _jsx(TouchableOpacity, {\n                className: \"absolute top-2 right-2 bg-white rounded-full p-2\",\n                onPress: function onPress() {\n                  return setSelectedMedia(null);\n                },\n                children: _jsx(Feather, {\n                  name: \"x\",\n                  size: 20,\n                  color: \"#EF4444\"\n                })\n              })]\n            }) : _jsxs(TouchableOpacity, {\n              className: \"bg-white border border-dashed border-gray-300 rounded-lg py-8 items-center\",\n              onPress: pickImage,\n              children: [_jsx(Feather, {\n                name: \"upload\",\n                size: 32,\n                color: \"#9CA3AF\"\n              }), _jsx(Text, {\n                className: \"text-gray-500 mt-2\",\n                children: \"Tap to select a photo\"\n              })]\n            })]\n          }), mediaType === 'video' && _jsxs(View, {\n            children: [_jsx(Text, {\n              className: \"text-gray-700 mb-2 font-medium\",\n              children: \"Upload Video\"\n            }), selectedMedia ? _jsxs(View, {\n              className: \"rounded-lg overflow-hidden mb-2 bg-gray-100 p-4\",\n              children: [_jsxs(Text, {\n                className: \"text-gray-800\",\n                children: [\"Video selected: \", selectedMedia.uri.split('/').pop()]\n              }), _jsxs(TouchableOpacity, {\n                className: \"bg-white rounded-lg py-2 px-4 mt-3 border border-gray-300 flex-row items-center justify-center\",\n                onPress: function onPress() {\n                  return setSelectedMedia(null);\n                },\n                children: [_jsx(Feather, {\n                  name: \"x\",\n                  size: 16,\n                  color: \"#4B5563\"\n                }), _jsx(Text, {\n                  className: \"text-gray-700 ml-1\",\n                  children: \"Remove Video\"\n                })]\n              })]\n            }) : _jsxs(TouchableOpacity, {\n              className: \"bg-white border border-dashed border-gray-300 rounded-lg py-8 items-center\",\n              onPress: pickVideo,\n              children: [_jsx(Feather, {\n                name: \"video\",\n                size: 32,\n                color: \"#9CA3AF\"\n              }), _jsx(Text, {\n                className: \"text-gray-500 mt-2\",\n                children: \"Tap to select a video (max 60 sec)\"\n              })]\n            })]\n          }), mediaType === 'text' && _jsxs(View, {\n            children: [_jsx(Text, {\n              className: \"text-gray-700 mb-2 font-medium\",\n              children: \"Text Content\"\n            }), _jsx(TextInput, {\n              className: \"bg-white border border-gray-300 rounded-lg p-4 text-gray-800\",\n              placeholder: \"Enter your text content here (lyrics, poem, story, etc.)\",\n              value: textContent,\n              onChangeText: setTextContent,\n              multiline: true,\n              numberOfLines: 8,\n              textAlignVertical: \"top\"\n            })]\n          }), _jsx(TouchableOpacity, {\n            className: `rounded-lg py-3.5 items-center mt-6 ${loading ? 'bg-primary/70' : 'bg-primary'}`,\n            onPress: handleSubmit,\n            disabled: loading,\n            children: loading ? _jsxs(View, {\n              className: \"flex-row items-center\",\n              children: [_jsx(ActivityIndicator, {\n                size: \"small\",\n                color: \"white\"\n              }), _jsx(Text, {\n                className: \"text-white font-bold text-lg ml-2\",\n                children: \"Submitting...\"\n              })]\n            }) : _jsx(Text, {\n              className: \"text-white font-bold text-lg\",\n              children: \"Submit Entry\"\n            })\n          })]\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","ScrollView","Alert","ActivityIndicator","KeyboardAvoidingView","Platform","Image","Feather","ImagePicker","useAuth","supabase","jsx","_jsx","jsxs","_jsxs","SubmissionScreen","_ref","route","navigation","_route$params","params","competitionId","competitionTitle","_useAuth","user","_useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","description","setDescription","_useState5","_useState6","mediaType","setMediaType","_useState7","_useState8","selectedMedia","setSelectedMedia","_useState9","_useState10","textContent","setTextContent","_useState11","_useState12","loading","setLoading","validateForm","trim","pickImage","_ref2","_asyncToGenerator","permissionResult","requestMediaLibraryPermissionsAsync","granted","alert","result","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","canceled","assets","apply","arguments","pickVideo","_ref3","Videos","videoMaxDuration","uploadMedia","_ref4","fileExt","uri","split","pop","fileName","id","Date","now","filePath","response","fetch","blob","_yield$supabase$stora","storage","from","upload","contentType","type","data","error","_supabase$storage$fro","getPublicUrl","urlData","publicUrl","console","handleSubmit","_ref5","validationError","mediaUrl","submissionData","competition_id","user_id","media_type","media_url","text_content","created_at","_yield$supabase$from$","insert","select","text","onPress","goBack","behavior","OS","className","children","placeholder","value","onChangeText","multiline","numberOfLines","textAlignVertical","name","size","color","source","resizeMode","disabled"],"sources":["/home/runner/workspace/src/screens/SubmissionScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  ScrollView,\n  Alert,\n  ActivityIndicator,\n  KeyboardAvoidingView,\n  Platform,\n  Image,\n} from 'react-native';\nimport { Feather } from '@expo/vector-icons';\nimport * as ImagePicker from 'expo-image-picker';\nimport { useAuth } from '../context/AuthContext';\nimport supabase from '../utils/supabaseClient';\n\nexport default function SubmissionScreen({ route, navigation }) {\n  const { competitionId, competitionTitle } = route.params;\n  const { user } = useAuth();\n  \n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [mediaType, setMediaType] = useState('photo'); // 'photo', 'video', 'text'\n  const [selectedMedia, setSelectedMedia] = useState(null);\n  const [textContent, setTextContent] = useState('');\n  const [loading, setLoading] = useState(false);\n  \n  const validateForm = () => {\n    if (!title.trim()) return 'Please enter a title for your submission';\n    if (!description.trim()) return 'Please provide a description';\n    \n    if (mediaType === 'photo' && !selectedMedia) {\n      return 'Please select a photo for your submission';\n    }\n    \n    if (mediaType === 'video' && !selectedMedia) {\n      return 'Please select a video for your submission';\n    }\n    \n    if (mediaType === 'text' && !textContent.trim()) {\n      return 'Please enter text content for your submission';\n    }\n    \n    return null;\n  };\n  \n  const pickImage = async () => {\n    const permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\n    \n    if (!permissionResult.granted) {\n      Alert.alert('Permission Required', 'We need your permission to access the media library');\n      return;\n    }\n    \n    const result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 0.8,\n    });\n    \n    if (!result.canceled && result.assets && result.assets[0]) {\n      setSelectedMedia(result.assets[0]);\n    }\n  };\n  \n  const pickVideo = async () => {\n    const permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\n    \n    if (!permissionResult.granted) {\n      Alert.alert('Permission Required', 'We need your permission to access the media library');\n      return;\n    }\n    \n    const result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Videos,\n      allowsEditing: true,\n      aspect: [16, 9],\n      quality: 0.8,\n      videoMaxDuration: 60,\n    });\n    \n    if (!result.canceled && result.assets && result.assets[0]) {\n      setSelectedMedia(result.assets[0]);\n    }\n  };\n  \n  const uploadMedia = async () => {\n    if (!selectedMedia) return null;\n    \n    try {\n      // Get file extension\n      const fileExt = selectedMedia.uri.split('.').pop();\n      const fileName = `${user.id}-${Date.now()}.${fileExt}`;\n      const filePath = `submissions/${fileName}`;\n      \n      // Prepare file for upload\n      const response = await fetch(selectedMedia.uri);\n      const blob = await response.blob();\n      \n      // Upload to Supabase storage\n      const { data, error } = await supabase.storage\n        .from('media')\n        .upload(filePath, blob, {\n          contentType: selectedMedia.type,\n        });\n      \n      if (error) throw error;\n      \n      // Get public URL\n      const { data: urlData } = supabase.storage\n        .from('media')\n        .getPublicUrl(filePath);\n      \n      return urlData.publicUrl;\n    } catch (error) {\n      console.error('Error uploading media:', error);\n      throw error;\n    }\n  };\n  \n  const handleSubmit = async () => {\n    const validationError = validateForm();\n    if (validationError) {\n      Alert.alert('Validation Error', validationError);\n      return;\n    }\n    \n    try {\n      setLoading(true);\n      \n      let mediaUrl = null;\n      \n      // Upload media if necessary\n      if (mediaType !== 'text' && selectedMedia) {\n        mediaUrl = await uploadMedia();\n      }\n      \n      // Create submission record\n      const submissionData = {\n        competition_id: competitionId,\n        user_id: user.id,\n        title,\n        description,\n        media_type: mediaType,\n        media_url: mediaUrl,\n        text_content: mediaType === 'text' ? textContent : null,\n        created_at: new Date(),\n      };\n      \n      const { data, error } = await supabase\n        .from('submissions')\n        .insert([submissionData])\n        .select();\n      \n      if (error) throw error;\n      \n      Alert.alert(\n        'Success',\n        'Your submission has been received!',\n        [{ text: 'OK', onPress: () => navigation.goBack() }]\n      );\n    } catch (error) {\n      console.error('Error submitting:', error);\n      Alert.alert('Error', 'Failed to submit your entry. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  return (\n    <KeyboardAvoidingView\n      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n      className=\"flex-1\"\n    >\n      <ScrollView className=\"flex-1 bg-background\">\n        <View className=\"p-4\">\n          <Text className=\"text-2xl font-bold text-gray-800 mb-2\">Submit Your Entry</Text>\n          <Text className=\"text-gray-600 mb-6\">\n            for \"{competitionTitle}\"\n          </Text>\n          \n          <View className=\"space-y-4\">\n            {/* Title input */}\n            <View>\n              <Text className=\"text-gray-700 mb-1 font-medium\">Title</Text>\n              <TextInput\n                className=\"bg-white border border-gray-300 rounded-lg px-4 py-3 text-gray-800\"\n                placeholder=\"Enter a title for your submission\"\n                value={title}\n                onChangeText={setTitle}\n              />\n            </View>\n            \n            {/* Description input */}\n            <View>\n              <Text className=\"text-gray-700 mb-1 font-medium\">Description</Text>\n              <TextInput\n                className=\"bg-white border border-gray-300 rounded-lg px-4 py-3 text-gray-800\"\n                placeholder=\"Describe your submission\"\n                value={description}\n                onChangeText={setDescription}\n                multiline\n                numberOfLines={3}\n                textAlignVertical=\"top\"\n              />\n            </View>\n            \n            {/* Media type selection */}\n            <View>\n              <Text className=\"text-gray-700 mb-2 font-medium\">Submission Type</Text>\n              <View className=\"flex-row space-x-4\">\n                <TouchableOpacity\n                  className={`flex-1 border rounded-lg py-3 items-center ${mediaType === 'photo' ? 'bg-primary border-primary' : 'bg-white border-gray-300'}`}\n                  onPress={() => setMediaType('photo')}\n                >\n                  <Feather \n                    name=\"image\" \n                    size={20} \n                    color={mediaType === 'photo' ? 'white' : '#4B5563'} \n                  />\n                  <Text \n                    className={`mt-1 ${mediaType === 'photo' ? 'text-white' : 'text-gray-700'}`}\n                  >\n                    Photo\n                  </Text>\n                </TouchableOpacity>\n                \n                <TouchableOpacity\n                  className={`flex-1 border rounded-lg py-3 items-center ${mediaType === 'video' ? 'bg-primary border-primary' : 'bg-white border-gray-300'}`}\n                  onPress={() => setMediaType('video')}\n                >\n                  <Feather \n                    name=\"film\" \n                    size={20} \n                    color={mediaType === 'video' ? 'white' : '#4B5563'} \n                  />\n                  <Text \n                    className={`mt-1 ${mediaType === 'video' ? 'text-white' : 'text-gray-700'}`}\n                  >\n                    Video\n                  </Text>\n                </TouchableOpacity>\n                \n                <TouchableOpacity\n                  className={`flex-1 border rounded-lg py-3 items-center ${mediaType === 'text' ? 'bg-primary border-primary' : 'bg-white border-gray-300'}`}\n                  onPress={() => setMediaType('text')}\n                >\n                  <Feather \n                    name=\"file-text\" \n                    size={20} \n                    color={mediaType === 'text' ? 'white' : '#4B5563'} \n                  />\n                  <Text \n                    className={`mt-1 ${mediaType === 'text' ? 'text-white' : 'text-gray-700'}`}\n                  >\n                    Text\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n            \n            {/* Media content based on type */}\n            {mediaType === 'photo' && (\n              <View>\n                <Text className=\"text-gray-700 mb-2 font-medium\">Upload Photo</Text>\n                {selectedMedia ? (\n                  <View className=\"rounded-lg overflow-hidden mb-2\">\n                    <Image\n                      source={{ uri: selectedMedia.uri }}\n                      className=\"w-full h-64 bg-gray-200\"\n                      resizeMode=\"cover\"\n                    />\n                    <TouchableOpacity\n                      className=\"absolute top-2 right-2 bg-white rounded-full p-2\"\n                      onPress={() => setSelectedMedia(null)}\n                    >\n                      <Feather name=\"x\" size={20} color=\"#EF4444\" />\n                    </TouchableOpacity>\n                  </View>\n                ) : (\n                  <TouchableOpacity\n                    className=\"bg-white border border-dashed border-gray-300 rounded-lg py-8 items-center\"\n                    onPress={pickImage}\n                  >\n                    <Feather name=\"upload\" size={32} color=\"#9CA3AF\" />\n                    <Text className=\"text-gray-500 mt-2\">\n                      Tap to select a photo\n                    </Text>\n                  </TouchableOpacity>\n                )}\n              </View>\n            )}\n            \n            {mediaType === 'video' && (\n              <View>\n                <Text className=\"text-gray-700 mb-2 font-medium\">Upload Video</Text>\n                {selectedMedia ? (\n                  <View className=\"rounded-lg overflow-hidden mb-2 bg-gray-100 p-4\">\n                    <Text className=\"text-gray-800\">\n                      Video selected: {selectedMedia.uri.split('/').pop()}\n                    </Text>\n                    <TouchableOpacity\n                      className=\"bg-white rounded-lg py-2 px-4 mt-3 border border-gray-300 flex-row items-center justify-center\"\n                      onPress={() => setSelectedMedia(null)}\n                    >\n                      <Feather name=\"x\" size={16} color=\"#4B5563\" />\n                      <Text className=\"text-gray-700 ml-1\">Remove Video</Text>\n                    </TouchableOpacity>\n                  </View>\n                ) : (\n                  <TouchableOpacity\n                    className=\"bg-white border border-dashed border-gray-300 rounded-lg py-8 items-center\"\n                    onPress={pickVideo}\n                  >\n                    <Feather name=\"video\" size={32} color=\"#9CA3AF\" />\n                    <Text className=\"text-gray-500 mt-2\">\n                      Tap to select a video (max 60 sec)\n                    </Text>\n                  </TouchableOpacity>\n                )}\n              </View>\n            )}\n            \n            {mediaType === 'text' && (\n              <View>\n                <Text className=\"text-gray-700 mb-2 font-medium\">Text Content</Text>\n                <TextInput\n                  className=\"bg-white border border-gray-300 rounded-lg p-4 text-gray-800\"\n                  placeholder=\"Enter your text content here (lyrics, poem, story, etc.)\"\n                  value={textContent}\n                  onChangeText={setTextContent}\n                  multiline\n                  numberOfLines={8}\n                  textAlignVertical=\"top\"\n                />\n              </View>\n            )}\n            \n            <TouchableOpacity\n              className={`rounded-lg py-3.5 items-center mt-6 ${loading ? 'bg-primary/70' : 'bg-primary'}`}\n              onPress={handleSubmit}\n              disabled={loading}\n            >\n              {loading ? (\n                <View className=\"flex-row items-center\">\n                  <ActivityIndicator size=\"small\" color=\"white\" />\n                  <Text className=\"text-white font-bold text-lg ml-2\">\n                    Submitting...\n                  </Text>\n                </View>\n              ) : (\n                <Text className=\"text-white font-bold text-lg\">\n                  Submit Entry\n                </Text>\n              )}\n            </TouchableOpacity>\n          </View>\n        </View>\n      </ScrollView>\n    </KeyboardAvoidingView>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}