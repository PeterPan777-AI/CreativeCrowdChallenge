{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Feather } from '@expo/vector-icons';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function UserProfileHeader(_ref) {\n  var userDetails = _ref.userDetails,\n    stats = _ref.stats;\n  if (!userDetails) return null;\n  var generateColor = function generateColor(username) {\n    if (!username) return '#3B82F6';\n    var colors = ['#3B82F6', '#8B5CF6', '#10B981', '#F59E0B', '#EF4444', '#EC4899'];\n    var hash = 0;\n    for (var i = 0; i < username.length; i++) {\n      hash = username.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    return colors[Math.abs(hash) % colors.length];\n  };\n  var getInitials = function getInitials(username) {\n    if (!username) return '?';\n    var parts = username.split(' ');\n    if (parts.length > 1) {\n      return `${parts[0][0]}${parts[1][0]}`.toUpperCase();\n    }\n    return username.substring(0, 2).toUpperCase();\n  };\n  var avatarColor = generateColor(userDetails.username);\n  var userInitials = getInitials(userDetails.username);\n  var joinDate = new Date(userDetails.created_at).toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'long'\n  });\n  var isBusiness = userDetails.role === 'business';\n  var isAdmin = userDetails.role === 'admin';\n  return _jsxs(View, {\n    className: \"bg-white rounded-lg p-4 shadow-sm\",\n    children: [_jsxs(View, {\n      className: \"flex-row items-center\",\n      children: [_jsx(View, {\n        className: \"w-16 h-16 rounded-full items-center justify-center\",\n        style: {\n          backgroundColor: avatarColor\n        },\n        children: _jsx(Text, {\n          className: \"text-white text-xl font-bold\",\n          children: userInitials\n        })\n      }), _jsxs(View, {\n        className: \"ml-4 flex-1\",\n        children: [_jsx(Text, {\n          className: \"text-xl font-bold text-gray-800\",\n          children: userDetails.username\n        }), _jsx(Text, {\n          className: \"text-gray-500\",\n          children: userDetails.email\n        }), _jsxs(View, {\n          className: \"flex-row items-center mt-1\",\n          children: [_jsx(Feather, {\n            name: \"calendar\",\n            size: 14,\n            color: \"#6B7280\"\n          }), _jsxs(Text, {\n            className: \"text-gray-500 text-sm ml-1\",\n            children: [\"Member since \", joinDate]\n          })]\n        })]\n      })]\n    }), (isBusiness || isAdmin) && _jsx(View, {\n      className: `mt-3 py-2 px-3 rounded-lg self-start ${isBusiness ? 'bg-amber-100' : 'bg-purple-100'}`,\n      children: _jsxs(View, {\n        className: \"flex-row items-center\",\n        children: [_jsx(Feather, {\n          name: isBusiness ? 'briefcase' : 'shield',\n          size: 14,\n          color: isBusiness ? '#F59E0B' : '#8B5CF6'\n        }), _jsx(Text, {\n          className: `ml-1 font-medium ${isBusiness ? 'text-amber-700' : 'text-purple-700'}`,\n          children: isBusiness ? 'Business Account' : 'Administrator'\n        })]\n      })\n    }), (stats == null ? void 0 : stats.highestRated) && stats.highestRated.avgRating > 0 && _jsx(View, {\n      className: \"mt-3 bg-blue-50 p-3 rounded-lg\",\n      children: _jsxs(Text, {\n        className: \"text-blue-800 font-medium\",\n        children: [_jsx(Feather, {\n          name: \"award\",\n          size: 14,\n          color: \"#3B82F6\"\n        }), \" Top Rated Submission: \", stats.highestRated.title, \" (\", stats.highestRated.avgRating, \"/10)\"]\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","View","Text","TouchableOpacity","Feather","jsx","_jsx","jsxs","_jsxs","UserProfileHeader","_ref","userDetails","stats","generateColor","username","colors","hash","i","length","charCodeAt","Math","abs","getInitials","parts","split","toUpperCase","substring","avatarColor","userInitials","joinDate","Date","created_at","toLocaleDateString","year","month","isBusiness","role","isAdmin","className","children","style","backgroundColor","email","name","size","color","highestRated","avgRating","title"],"sources":["/home/runner/workspace/src/components/UserProfileHeader.js"],"sourcesContent":["import React from 'react';\nimport { View, Text, TouchableOpacity } from 'react-native';\nimport { Feather } from '@expo/vector-icons';\n\nexport default function UserProfileHeader({ userDetails, stats }) {\n  if (!userDetails) return null;\n  \n  // Function to generate a color based on username (for the avatar)\n  const generateColor = (username) => {\n    if (!username) return '#3B82F6'; // Default blue\n    \n    const colors = [\n      '#3B82F6', // blue\n      '#8B5CF6', // purple\n      '#10B981', // green\n      '#F59E0B', // amber\n      '#EF4444', // red\n      '#EC4899', // pink\n    ];\n    \n    // Simple hash function to determine color\n    let hash = 0;\n    for (let i = 0; i < username.length; i++) {\n      hash = username.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    \n    return colors[Math.abs(hash) % colors.length];\n  };\n  \n  // Generate initials from username\n  const getInitials = (username) => {\n    if (!username) return '?';\n    \n    const parts = username.split(' ');\n    if (parts.length > 1) {\n      return `${parts[0][0]}${parts[1][0]}`.toUpperCase();\n    }\n    \n    return username.substring(0, 2).toUpperCase();\n  };\n  \n  const avatarColor = generateColor(userDetails.username);\n  const userInitials = getInitials(userDetails.username);\n  const joinDate = new Date(userDetails.created_at).toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'long'\n  });\n  \n  const isBusiness = userDetails.role === 'business';\n  const isAdmin = userDetails.role === 'admin';\n  \n  return (\n    <View className=\"bg-white rounded-lg p-4 shadow-sm\">\n      <View className=\"flex-row items-center\">\n        {/* User avatar */}\n        <View \n          className=\"w-16 h-16 rounded-full items-center justify-center\"\n          style={{ backgroundColor: avatarColor }}\n        >\n          <Text className=\"text-white text-xl font-bold\">{userInitials}</Text>\n        </View>\n        \n        {/* User info */}\n        <View className=\"ml-4 flex-1\">\n          <Text className=\"text-xl font-bold text-gray-800\">\n            {userDetails.username}\n          </Text>\n          \n          <Text className=\"text-gray-500\">\n            {userDetails.email}\n          </Text>\n          \n          <View className=\"flex-row items-center mt-1\">\n            <Feather name=\"calendar\" size={14} color=\"#6B7280\" />\n            <Text className=\"text-gray-500 text-sm ml-1\">\n              Member since {joinDate}\n            </Text>\n          </View>\n        </View>\n      </View>\n      \n      {/* Role badge */}\n      {(isBusiness || isAdmin) && (\n        <View className={`mt-3 py-2 px-3 rounded-lg self-start ${\n          isBusiness ? 'bg-amber-100' : 'bg-purple-100'\n        }`}>\n          <View className=\"flex-row items-center\">\n            <Feather \n              name={isBusiness ? 'briefcase' : 'shield'} \n              size={14} \n              color={isBusiness ? '#F59E0B' : '#8B5CF6'} \n            />\n            <Text className={`ml-1 font-medium ${\n              isBusiness ? 'text-amber-700' : 'text-purple-700'\n            }`}>\n              {isBusiness ? 'Business Account' : 'Administrator'}\n            </Text>\n          </View>\n        </View>\n      )}\n      \n      {/* Best achievement */}\n      {stats?.highestRated && stats.highestRated.avgRating > 0 && (\n        <View className=\"mt-3 bg-blue-50 p-3 rounded-lg\">\n          <Text className=\"text-blue-800 font-medium\">\n            <Feather name=\"award\" size={14} color=\"#3B82F6\" /> Top Rated Submission: {stats.highestRated.title} ({stats.highestRated.avgRating}/10)\n          </Text>\n        </View>\n      )}\n    </View>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}