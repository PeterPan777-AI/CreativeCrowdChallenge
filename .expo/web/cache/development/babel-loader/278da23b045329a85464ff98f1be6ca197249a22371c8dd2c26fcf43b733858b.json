{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport { Feather } from '@expo/vector-icons';\nimport supabase from \"../utils/supabaseClient\";\nimport { useAuth } from \"../context/AuthContext\";\nimport SubmissionItem from \"../components/SubmissionItem\";\nimport RatingComponent from \"../components/RatingComponent\";\nimport BusinessFeatures from \"../components/BusinessFeatures\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function CompetitionDetailsScreen(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var competitionId = route.params.competitionId;\n  var _useAuth = useAuth(),\n    user = _useAuth.user;\n  var _useWindowDimensions = useWindowDimensions(),\n    width = _useWindowDimensions.width;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    competition = _useState2[0],\n    setCompetition = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    submissions = _useState4[0],\n    setSubmissions = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState(true),\n    _useState8 = _slicedToArray(_useState7, 2),\n    submissionsLoading = _useState8[0],\n    setSubmissionsLoading = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    userHasSubmitted = _useState10[0],\n    setUserHasSubmitted = _useState10[1];\n  useEffect(function () {\n    fetchCompetitionDetails();\n    fetchSubmissions();\n    checkUserSubmission();\n    var submissionsSubscription = supabase.channel('submissions_changes').on('postgres_changes', {\n      event: '*',\n      schema: 'public',\n      table: 'submissions',\n      filter: `competition_id=eq.${competitionId}`\n    }, function (payload) {\n      fetchSubmissions();\n    }).subscribe();\n    return function () {\n      submissionsSubscription.unsubscribe();\n    };\n  }, [competitionId]);\n  var fetchCompetitionDetails = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        var _yield$supabase$from$ = yield supabase.from('competitions').select('*, profiles(username)').eq('id', competitionId).single(),\n          data = _yield$supabase$from$.data,\n          error = _yield$supabase$from$.error;\n        if (error) throw error;\n        setCompetition(data);\n      } catch (error) {\n        console.error('Error fetching competition details:', error);\n        Alert.alert('Error', 'Failed to load competition details');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function fetchCompetitionDetails() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var fetchSubmissions = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        setSubmissionsLoading(true);\n        var _yield$supabase$from$2 = yield supabase.from('submissions').select(`\n          *,\n          profiles(username),\n          ratings(rating, user_id)\n        `).eq('competition_id', competitionId).order('created_at', {\n            ascending: false\n          }),\n          data = _yield$supabase$from$2.data,\n          error = _yield$supabase$from$2.error;\n        if (error) throw error;\n        var submissionsWithAvgRating = data.map(function (submission) {\n          var _ratings$find;\n          var ratings = submission.ratings || [];\n          var avgRating = ratings.length ? ratings.reduce(function (sum, r) {\n            return sum + r.rating;\n          }, 0) / ratings.length : 0;\n          var userRating = ((_ratings$find = ratings.find(function (r) {\n            return r.user_id === (user == null ? void 0 : user.id);\n          })) == null ? void 0 : _ratings$find.rating) || 0;\n          return _objectSpread(_objectSpread({}, submission), {}, {\n            avgRating: parseFloat(avgRating.toFixed(1)),\n            userRating: userRating\n          });\n        });\n        setSubmissions(submissionsWithAvgRating);\n      } catch (error) {\n        console.error('Error fetching submissions:', error);\n        Alert.alert('Error', 'Failed to load submissions');\n      } finally {\n        setSubmissionsLoading(false);\n      }\n    });\n    return function fetchSubmissions() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var checkUserSubmission = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      if (!user) return;\n      try {\n        var _yield$supabase$from$3 = yield supabase.from('submissions').select('id').eq('competition_id', competitionId).eq('user_id', user.id).maybeSingle(),\n          data = _yield$supabase$from$3.data,\n          error = _yield$supabase$from$3.error;\n        if (error) throw error;\n        setUserHasSubmitted(!!data);\n      } catch (error) {\n        console.error('Error checking user submission:', error);\n      }\n    });\n    return function checkUserSubmission() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var handleSubmit = function handleSubmit() {\n    navigation.navigate('Submission', {\n      competitionId: competitionId,\n      competitionTitle: competition == null ? void 0 : competition.title\n    });\n  };\n  var handleRateSubmission = function () {\n    var _ref5 = _asyncToGenerator(function* (submissionId, rating) {\n      if (!user) {\n        Alert.alert('Authentication Required', 'Please log in to rate submissions');\n        return;\n      }\n      try {\n        var _yield$supabase$from$4 = yield supabase.from('ratings').select('id').eq('submission_id', submissionId).eq('user_id', user.id).maybeSingle(),\n          existingRating = _yield$supabase$from$4.data,\n          checkError = _yield$supabase$from$4.error;\n        if (checkError) throw checkError;\n        if (existingRating) {\n          var _yield$supabase$from$5 = yield supabase.from('ratings').update({\n              rating: rating,\n              updated_at: new Date()\n            }).eq('id', existingRating.id),\n            updateError = _yield$supabase$from$5.error;\n          if (updateError) throw updateError;\n        } else {\n          var _yield$supabase$from$6 = yield supabase.from('ratings').insert({\n              submission_id: submissionId,\n              user_id: user.id,\n              rating: rating,\n              created_at: new Date()\n            }),\n            insertError = _yield$supabase$from$6.error;\n          if (insertError) throw insertError;\n        }\n        fetchSubmissions();\n      } catch (error) {\n        console.error('Error rating submission:', error);\n        Alert.alert('Error', 'Failed to save your rating');\n      }\n    });\n    return function handleRateSubmission(_x, _x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  if (loading) {\n    return _jsxs(View, {\n      className: \"flex-1 justify-center items-center bg-background\",\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#3B82F6\"\n      }), _jsx(Text, {\n        className: \"text-gray-600 mt-4\",\n        children: \"Loading competition details...\"\n      })]\n    });\n  }\n  if (!competition) {\n    return _jsxs(View, {\n      className: \"flex-1 justify-center items-center bg-background\",\n      children: [_jsx(Feather, {\n        name: \"alert-circle\",\n        size: 60,\n        color: \"#EF4444\"\n      }), _jsx(Text, {\n        className: \"text-lg text-gray-700 mt-4\",\n        children: \"Competition not found\"\n      }), _jsx(TouchableOpacity, {\n        className: \"mt-6 bg-primary px-6 py-3 rounded-lg\",\n        onPress: function onPress() {\n          return navigation.goBack();\n        },\n        children: _jsx(Text, {\n          className: \"text-white font-medium\",\n          children: \"Go Back\"\n        })\n      })]\n    });\n  }\n  var isCompetitionActive = new Date(competition.end_date) > new Date();\n  var isBusiness = competition.type === 'business';\n  return _jsx(ScrollView, {\n    className: \"flex-1 bg-background\",\n    children: _jsxs(View, {\n      className: \"p-4\",\n      children: [_jsxs(View, {\n        className: `p-4 rounded-lg mb-4 ${isBusiness ? 'bg-amber-50 border border-amber-200' : 'bg-purple-50 border border-purple-200'}`,\n        children: [_jsxs(View, {\n          className: \"flex-row justify-between items-center mb-2\",\n          children: [_jsxs(View, {\n            className: \"flex-row items-center\",\n            children: [_jsx(Feather, {\n              name: isBusiness ? 'briefcase' : 'user',\n              size: 20,\n              color: isBusiness ? '#F59E0B' : '#8B5CF6'\n            }), _jsxs(Text, {\n              className: `ml-2 font-medium ${isBusiness ? 'text-amber-700' : 'text-purple-700'}`,\n              children: [isBusiness ? 'Business' : 'Individual', \" Competition\"]\n            })]\n          }), _jsx(View, {\n            className: `px-3 py-1 rounded-full ${isCompetitionActive ? 'bg-green-100' : 'bg-red-100'}`,\n            children: _jsx(Text, {\n              className: `text-xs font-medium ${isCompetitionActive ? 'text-green-800' : 'text-red-800'}`,\n              children: isCompetitionActive ? 'Active' : 'Ended'\n            })\n          })]\n        }), _jsx(Text, {\n          className: \"text-2xl font-bold text-gray-800 mb-2\",\n          children: competition.title\n        }), _jsx(Text, {\n          className: \"text-gray-600 mb-4\",\n          children: competition.description\n        }), _jsxs(View, {\n          className: \"flex-row flex-wrap\",\n          children: [_jsxs(View, {\n            className: \"mr-4 mb-2\",\n            children: [_jsx(Text, {\n              className: \"text-xs text-gray-500\",\n              children: \"Category\"\n            }), _jsx(Text, {\n              className: \"text-gray-800 font-medium\",\n              children: competition.category\n            })]\n          }), _jsxs(View, {\n            className: \"mr-4 mb-2\",\n            children: [_jsx(Text, {\n              className: \"text-xs text-gray-500\",\n              children: \"Prize\"\n            }), _jsxs(Text, {\n              className: \"text-gray-800 font-medium\",\n              children: [\"$\", competition.prize_amount]\n            })]\n          }), _jsxs(View, {\n            className: \"mr-4 mb-2\",\n            children: [_jsx(Text, {\n              className: \"text-xs text-gray-500\",\n              children: \"Start Date\"\n            }), _jsx(Text, {\n              className: \"text-gray-800 font-medium\",\n              children: new Date(competition.start_date).toLocaleDateString()\n            })]\n          }), _jsxs(View, {\n            className: \"mb-2\",\n            children: [_jsx(Text, {\n              className: \"text-xs text-gray-500\",\n              children: \"End Date\"\n            }), _jsx(Text, {\n              className: \"text-gray-800 font-medium\",\n              children: new Date(competition.end_date).toLocaleDateString()\n            })]\n          })]\n        }), isBusiness && competition.product_name && _jsx(BusinessFeatures, {\n          competition: competition\n        })]\n      }), isCompetitionActive && user && !userHasSubmitted && _jsx(TouchableOpacity, {\n        className: \"bg-primary py-3 rounded-lg items-center mb-6\",\n        onPress: handleSubmit,\n        children: _jsx(Text, {\n          className: \"text-white font-bold text-lg\",\n          children: \"Submit Your Entry\"\n        })\n      }), userHasSubmitted && _jsxs(View, {\n        className: \"bg-green-100 p-4 rounded-lg mb-6 flex-row items-center\",\n        children: [_jsx(Feather, {\n          name: \"check-circle\",\n          size: 20,\n          color: \"#10B981\"\n        }), _jsx(Text, {\n          className: \"text-green-800 ml-2 flex-1\",\n          children: \"You've already submitted an entry to this competition.\"\n        })]\n      }), _jsxs(View, {\n        children: [_jsxs(Text, {\n          className: \"text-xl font-bold text-gray-800 mb-4\",\n          children: [\"Submissions (\", submissions.length, \")\"]\n        }), submissionsLoading ? _jsxs(View, {\n          className: \"py-12 items-center\",\n          children: [_jsx(ActivityIndicator, {\n            size: \"small\",\n            color: \"#3B82F6\"\n          }), _jsx(Text, {\n            className: \"text-gray-500 mt-2\",\n            children: \"Loading submissions...\"\n          })]\n        }) : submissions.length === 0 ? _jsxs(View, {\n          className: \"py-12 items-center bg-white rounded-lg\",\n          children: [_jsx(Feather, {\n            name: \"inbox\",\n            size: 48,\n            color: \"#CBD5E1\"\n          }), _jsx(Text, {\n            className: \"text-gray-500 mt-4 text-center\",\n            children: \"No submissions yet. Be the first to submit!\"\n          })]\n        }) : submissions.map(function (submission) {\n          return _jsxs(View, {\n            className: \"mb-4\",\n            children: [_jsx(SubmissionItem, {\n              submission: submission\n            }), _jsx(RatingComponent, {\n              userRating: submission.userRating,\n              avgRating: submission.avgRating,\n              totalRatings: submission.ratings ? submission.ratings.length : 0,\n              onRate: function onRate(rating) {\n                return handleRateSubmission(submission.id, rating);\n              },\n              disabled: submission.user_id === (user == null ? void 0 : user.id) || !isCompetitionActive\n            })]\n          }, submission.id);\n        })]\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","View","Text","ScrollView","TouchableOpacity","Alert","ActivityIndicator","Image","useWindowDimensions","Feather","supabase","useAuth","SubmissionItem","RatingComponent","BusinessFeatures","jsx","_jsx","jsxs","_jsxs","CompetitionDetailsScreen","_ref","route","navigation","competitionId","params","_useAuth","user","_useWindowDimensions","width","_useState","_useState2","_slicedToArray","competition","setCompetition","_useState3","_useState4","submissions","setSubmissions","_useState5","_useState6","loading","setLoading","_useState7","_useState8","submissionsLoading","setSubmissionsLoading","_useState9","_useState10","userHasSubmitted","setUserHasSubmitted","fetchCompetitionDetails","fetchSubmissions","checkUserSubmission","submissionsSubscription","channel","on","event","schema","table","filter","payload","subscribe","unsubscribe","_ref2","_asyncToGenerator","_yield$supabase$from$","from","select","eq","single","data","error","console","alert","apply","arguments","_ref3","_yield$supabase$from$2","order","ascending","submissionsWithAvgRating","map","submission","_ratings$find","ratings","avgRating","length","reduce","sum","r","rating","userRating","find","user_id","id","_objectSpread","parseFloat","toFixed","_ref4","_yield$supabase$from$3","maybeSingle","handleSubmit","navigate","competitionTitle","title","handleRateSubmission","_ref5","submissionId","_yield$supabase$from$4","existingRating","checkError","_yield$supabase$from$5","update","updated_at","Date","updateError","_yield$supabase$from$6","insert","submission_id","created_at","insertError","_x","_x2","className","children","size","color","name","onPress","goBack","isCompetitionActive","end_date","isBusiness","type","description","category","prize_amount","start_date","toLocaleDateString","product_name","totalRatings","onRate","disabled"],"sources":["/home/runner/workspace/src/screens/CompetitionDetailsScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  ScrollView,\n  TouchableOpacity,\n  Alert,\n  ActivityIndicator,\n  Image,\n  useWindowDimensions,\n} from 'react-native';\nimport { Feather } from '@expo/vector-icons';\nimport supabase from '../utils/supabaseClient';\nimport { useAuth } from '../context/AuthContext';\nimport SubmissionItem from '../components/SubmissionItem';\nimport RatingComponent from '../components/RatingComponent';\nimport BusinessFeatures from '../components/BusinessFeatures';\n\nexport default function CompetitionDetailsScreen({ route, navigation }) {\n  const { competitionId } = route.params;\n  const { user } = useAuth();\n  const { width } = useWindowDimensions();\n  \n  const [competition, setCompetition] = useState(null);\n  const [submissions, setSubmissions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [submissionsLoading, setSubmissionsLoading] = useState(true);\n  const [userHasSubmitted, setUserHasSubmitted] = useState(false);\n  \n  useEffect(() => {\n    fetchCompetitionDetails();\n    fetchSubmissions();\n    checkUserSubmission();\n    \n    // Subscribe to real-time updates for submissions\n    const submissionsSubscription = supabase\n      .channel('submissions_changes')\n      .on('postgres_changes', { \n        event: '*', \n        schema: 'public', \n        table: 'submissions',\n        filter: `competition_id=eq.${competitionId}`\n      }, (payload) => {\n        fetchSubmissions();\n      })\n      .subscribe();\n      \n    return () => {\n      submissionsSubscription.unsubscribe();\n    };\n  }, [competitionId]);\n  \n  const fetchCompetitionDetails = async () => {\n    try {\n      setLoading(true);\n      const { data, error } = await supabase\n        .from('competitions')\n        .select('*, profiles(username)')\n        .eq('id', competitionId)\n        .single();\n        \n      if (error) throw error;\n      setCompetition(data);\n    } catch (error) {\n      console.error('Error fetching competition details:', error);\n      Alert.alert('Error', 'Failed to load competition details');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const fetchSubmissions = async () => {\n    try {\n      setSubmissionsLoading(true);\n      const { data, error } = await supabase\n        .from('submissions')\n        .select(`\n          *,\n          profiles(username),\n          ratings(rating, user_id)\n        `)\n        .eq('competition_id', competitionId)\n        .order('created_at', { ascending: false });\n        \n      if (error) throw error;\n      \n      // Calculate average ratings for each submission\n      const submissionsWithAvgRating = data.map(submission => {\n        const ratings = submission.ratings || [];\n        const avgRating = ratings.length \n          ? ratings.reduce((sum, r) => sum + r.rating, 0) / ratings.length \n          : 0;\n        \n        // Check if the current user has rated this submission\n        const userRating = ratings.find(r => r.user_id === user?.id)?.rating || 0;\n        \n        return { \n          ...submission, \n          avgRating: parseFloat(avgRating.toFixed(1)),\n          userRating\n        };\n      });\n      \n      setSubmissions(submissionsWithAvgRating);\n    } catch (error) {\n      console.error('Error fetching submissions:', error);\n      Alert.alert('Error', 'Failed to load submissions');\n    } finally {\n      setSubmissionsLoading(false);\n    }\n  };\n  \n  const checkUserSubmission = async () => {\n    if (!user) return;\n    \n    try {\n      const { data, error } = await supabase\n        .from('submissions')\n        .select('id')\n        .eq('competition_id', competitionId)\n        .eq('user_id', user.id)\n        .maybeSingle();\n        \n      if (error) throw error;\n      setUserHasSubmitted(!!data);\n    } catch (error) {\n      console.error('Error checking user submission:', error);\n    }\n  };\n  \n  const handleSubmit = () => {\n    navigation.navigate('Submission', { \n      competitionId, \n      competitionTitle: competition?.title \n    });\n  };\n  \n  const handleRateSubmission = async (submissionId, rating) => {\n    if (!user) {\n      Alert.alert('Authentication Required', 'Please log in to rate submissions');\n      return;\n    }\n    \n    try {\n      // Check if user has already rated this submission\n      const { data: existingRating, error: checkError } = await supabase\n        .from('ratings')\n        .select('id')\n        .eq('submission_id', submissionId)\n        .eq('user_id', user.id)\n        .maybeSingle();\n        \n      if (checkError) throw checkError;\n      \n      if (existingRating) {\n        // Update existing rating\n        const { error: updateError } = await supabase\n          .from('ratings')\n          .update({ rating, updated_at: new Date() })\n          .eq('id', existingRating.id);\n          \n        if (updateError) throw updateError;\n      } else {\n        // Insert new rating\n        const { error: insertError } = await supabase\n          .from('ratings')\n          .insert({\n            submission_id: submissionId,\n            user_id: user.id,\n            rating,\n            created_at: new Date()\n          });\n          \n        if (insertError) throw insertError;\n      }\n      \n      // Refresh submissions to update ratings\n      fetchSubmissions();\n    } catch (error) {\n      console.error('Error rating submission:', error);\n      Alert.alert('Error', 'Failed to save your rating');\n    }\n  };\n  \n  if (loading) {\n    return (\n      <View className=\"flex-1 justify-center items-center bg-background\">\n        <ActivityIndicator size=\"large\" color=\"#3B82F6\" />\n        <Text className=\"text-gray-600 mt-4\">Loading competition details...</Text>\n      </View>\n    );\n  }\n  \n  if (!competition) {\n    return (\n      <View className=\"flex-1 justify-center items-center bg-background\">\n        <Feather name=\"alert-circle\" size={60} color=\"#EF4444\" />\n        <Text className=\"text-lg text-gray-700 mt-4\">Competition not found</Text>\n        <TouchableOpacity\n          className=\"mt-6 bg-primary px-6 py-3 rounded-lg\"\n          onPress={() => navigation.goBack()}\n        >\n          <Text className=\"text-white font-medium\">Go Back</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n  \n  const isCompetitionActive = new Date(competition.end_date) > new Date();\n  const isBusiness = competition.type === 'business';\n  \n  return (\n    <ScrollView className=\"flex-1 bg-background\">\n      <View className=\"p-4\">\n        {/* Competition header */}\n        <View className={`p-4 rounded-lg mb-4 ${isBusiness ? 'bg-amber-50 border border-amber-200' : 'bg-purple-50 border border-purple-200'}`}>\n          <View className=\"flex-row justify-between items-center mb-2\">\n            <View className=\"flex-row items-center\">\n              <Feather \n                name={isBusiness ? 'briefcase' : 'user'} \n                size={20} \n                color={isBusiness ? '#F59E0B' : '#8B5CF6'} \n              />\n              <Text className={`ml-2 font-medium ${isBusiness ? 'text-amber-700' : 'text-purple-700'}`}>\n                {isBusiness ? 'Business' : 'Individual'} Competition\n              </Text>\n            </View>\n            <View className={`px-3 py-1 rounded-full ${isCompetitionActive ? 'bg-green-100' : 'bg-red-100'}`}>\n              <Text className={`text-xs font-medium ${isCompetitionActive ? 'text-green-800' : 'text-red-800'}`}>\n                {isCompetitionActive ? 'Active' : 'Ended'}\n              </Text>\n            </View>\n          </View>\n          \n          <Text className=\"text-2xl font-bold text-gray-800 mb-2\">\n            {competition.title}\n          </Text>\n          \n          <Text className=\"text-gray-600 mb-4\">\n            {competition.description}\n          </Text>\n          \n          <View className=\"flex-row flex-wrap\">\n            <View className=\"mr-4 mb-2\">\n              <Text className=\"text-xs text-gray-500\">Category</Text>\n              <Text className=\"text-gray-800 font-medium\">{competition.category}</Text>\n            </View>\n            \n            <View className=\"mr-4 mb-2\">\n              <Text className=\"text-xs text-gray-500\">Prize</Text>\n              <Text className=\"text-gray-800 font-medium\">${competition.prize_amount}</Text>\n            </View>\n            \n            <View className=\"mr-4 mb-2\">\n              <Text className=\"text-xs text-gray-500\">Start Date</Text>\n              <Text className=\"text-gray-800 font-medium\">\n                {new Date(competition.start_date).toLocaleDateString()}\n              </Text>\n            </View>\n            \n            <View className=\"mb-2\">\n              <Text className=\"text-xs text-gray-500\">End Date</Text>\n              <Text className=\"text-gray-800 font-medium\">\n                {new Date(competition.end_date).toLocaleDateString()}\n              </Text>\n            </View>\n          </View>\n          \n          {isBusiness && competition.product_name && (\n            <BusinessFeatures competition={competition} />\n          )}\n        </View>\n        \n        {/* Submit button */}\n        {isCompetitionActive && user && !userHasSubmitted && (\n          <TouchableOpacity\n            className=\"bg-primary py-3 rounded-lg items-center mb-6\"\n            onPress={handleSubmit}\n          >\n            <Text className=\"text-white font-bold text-lg\">Submit Your Entry</Text>\n          </TouchableOpacity>\n        )}\n        \n        {userHasSubmitted && (\n          <View className=\"bg-green-100 p-4 rounded-lg mb-6 flex-row items-center\">\n            <Feather name=\"check-circle\" size={20} color=\"#10B981\" />\n            <Text className=\"text-green-800 ml-2 flex-1\">\n              You've already submitted an entry to this competition.\n            </Text>\n          </View>\n        )}\n        \n        {/* Submissions section */}\n        <View>\n          <Text className=\"text-xl font-bold text-gray-800 mb-4\">\n            Submissions ({submissions.length})\n          </Text>\n          \n          {submissionsLoading ? (\n            <View className=\"py-12 items-center\">\n              <ActivityIndicator size=\"small\" color=\"#3B82F6\" />\n              <Text className=\"text-gray-500 mt-2\">Loading submissions...</Text>\n            </View>\n          ) : submissions.length === 0 ? (\n            <View className=\"py-12 items-center bg-white rounded-lg\">\n              <Feather name=\"inbox\" size={48} color=\"#CBD5E1\" />\n              <Text className=\"text-gray-500 mt-4 text-center\">\n                No submissions yet. Be the first to submit!\n              </Text>\n            </View>\n          ) : (\n            submissions.map((submission) => (\n              <View key={submission.id} className=\"mb-4\">\n                <SubmissionItem submission={submission} />\n                <RatingComponent\n                  userRating={submission.userRating}\n                  avgRating={submission.avgRating}\n                  totalRatings={submission.ratings ? submission.ratings.length : 0}\n                  onRate={(rating) => handleRateSubmission(submission.id, rating)}\n                  disabled={submission.user_id === user?.id || !isCompetitionActive}\n                />\n              </View>\n            ))\n          )}\n        </View>\n      </View>\n    </ScrollView>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}