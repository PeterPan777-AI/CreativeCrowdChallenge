{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useFocusEffect } from '@react-navigation/native';\nimport { Feather } from '@expo/vector-icons';\nimport supabase from \"../utils/supabaseClient\";\nimport CompetitionCard from \"../components/CompetitionCard\";\nimport TabsComponent from \"../components/TabsComponent\";\nimport { globalStyles, theme } from \"../styles\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    competitions = _useState2[0],\n    setCompetitions = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    refreshing = _useState6[0],\n    setRefreshing = _useState6[1];\n  var _useState7 = useState('all'),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedTab = _useState8[0],\n    setSelectedTab = _useState8[1];\n  var fetchCompetitions = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        var query = supabase.from('competitions').select('*, profiles(username)').eq('status', 'active').order('start_date', {\n          ascending: false\n        });\n        if (selectedTab !== 'all') {\n          query = query.eq('type', selectedTab);\n        }\n        var _yield$query = yield query,\n          data = _yield$query.data,\n          error = _yield$query.error;\n        if (error) throw error;\n        setCompetitions(data || []);\n      } catch (error) {\n        console.error('Error fetching competitions:', error);\n        Alert.alert('Error', 'Failed to load competitions. Please try again later.');\n      } finally {\n        setLoading(false);\n        setRefreshing(false);\n      }\n    });\n    return function fetchCompetitions() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    fetchCompetitions();\n    var subscription = supabase.channel('competitions_changes').on('postgres_changes', {\n      event: '*',\n      schema: 'public',\n      table: 'competitions'\n    }, function (payload) {\n      fetchCompetitions();\n    }).subscribe();\n    return function () {\n      subscription.unsubscribe();\n    };\n  }, [selectedTab]);\n  useFocusEffect(useCallback(function () {\n    fetchCompetitions();\n  }, [selectedTab]));\n  var onRefresh = function onRefresh() {\n    setRefreshing(true);\n    fetchCompetitions();\n  };\n  var handleCompetitionPress = function handleCompetitionPress(competition) {\n    navigation.navigate('CompetitionDetails', {\n      competitionId: competition.id,\n      title: competition.title\n    });\n  };\n  var tabs = [{\n    key: 'all',\n    label: 'All'\n  }, {\n    key: 'individual',\n    label: 'Individual'\n  }, {\n    key: 'business',\n    label: 'Business'\n  }];\n  var renderEmptyList = function renderEmptyList() {\n    if (loading) return null;\n    return _jsxs(View, {\n      style: styles.emptyContainer,\n      children: [_jsx(Feather, {\n        name: \"award\",\n        size: 60,\n        color: \"#CBD5E1\"\n      }), _jsxs(Text, {\n        style: styles.emptyText,\n        children: [\"No competitions available right now.\", selectedTab !== 'all' && ` Try checking the ${selectedTab === 'individual' ? 'Business' : 'Individual'} category.`]\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TabsComponent, {\n      tabs: tabs,\n      selectedTab: selectedTab,\n      onTabChange: setSelectedTab\n    }), loading && !refreshing ? _jsxs(View, {\n      style: styles.loadingContainer,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: theme.colors.primary\n      }), _jsx(Text, {\n        style: styles.loadingText,\n        children: \"Loading competitions...\"\n      })]\n    }) : _jsx(FlatList, {\n      data: competitions,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item;\n        return _jsx(CompetitionCard, {\n          competition: item,\n          onPress: function onPress() {\n            return handleCompetitionPress(item);\n          }\n        });\n      },\n      contentContainerStyle: {\n        padding: 12\n      },\n      ItemSeparatorComponent: function ItemSeparatorComponent() {\n        return _jsx(View, {\n          style: styles.separator\n        });\n      },\n      refreshControl: _jsx(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh\n      }),\n      ListEmptyComponent: renderEmptyList\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","useCallback","View","Text","FlatList","RefreshControl","ActivityIndicator","Alert","TouchableOpacity","StyleSheet","useFocusEffect","Feather","supabase","CompetitionCard","TabsComponent","globalStyles","theme","jsx","_jsx","jsxs","_jsxs","HomeScreen","_ref","navigation","_useState","_useState2","_slicedToArray","competitions","setCompetitions","_useState3","_useState4","loading","setLoading","_useState5","_useState6","refreshing","setRefreshing","_useState7","_useState8","selectedTab","setSelectedTab","fetchCompetitions","_ref2","_asyncToGenerator","query","from","select","eq","order","ascending","_yield$query","data","error","console","alert","apply","arguments","subscription","channel","on","event","schema","table","payload","subscribe","unsubscribe","onRefresh","handleCompetitionPress","competition","navigate","competitionId","id","title","tabs","key","label","renderEmptyList","style","styles","emptyContainer","children","name","size","color","emptyText","container","onTabChange","loadingContainer","colors","primary","loadingText","keyExtractor","item","toString","renderItem","_ref3","onPress","contentContainerStyle","padding","ItemSeparatorComponent","separator","refreshControl","ListEmptyComponent"],"sources":["/home/runner/workspace/src/screens/HomeScreen.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  View,\n  Text,\n  FlatList,\n  RefreshControl,\n  ActivityIndicator,\n  Alert,\n  TouchableOpacity,\n  StyleSheet,\n} from 'react-native';\nimport { useFocusEffect } from '@react-navigation/native';\nimport { Feather } from '@expo/vector-icons';\nimport supabase from '../utils/supabaseClient';\nimport CompetitionCard from '../components/CompetitionCard';\nimport TabsComponent from '../components/TabsComponent';\nimport { globalStyles, theme } from '../styles';\n\nexport default function HomeScreen({ navigation }) {\n  const [competitions, setCompetitions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [selectedTab, setSelectedTab] = useState('all'); // 'all', 'individual', 'business'\n  \n  const fetchCompetitions = async () => {\n    try {\n      setLoading(true);\n      \n      let query = supabase\n        .from('competitions')\n        .select('*, profiles(username)')\n        .eq('status', 'active')\n        .order('start_date', { ascending: false });\n      \n      // Filter by competition type if not on 'all' tab\n      if (selectedTab !== 'all') {\n        query = query.eq('type', selectedTab);\n      }\n      \n      const { data, error } = await query;\n      \n      if (error) throw error;\n      \n      setCompetitions(data || []);\n    } catch (error) {\n      console.error('Error fetching competitions:', error);\n      Alert.alert('Error', 'Failed to load competitions. Please try again later.');\n    } finally {\n      setLoading(false);\n      setRefreshing(false);\n    }\n  };\n  \n  // Subscribe to changes in the competitions table\n  useEffect(() => {\n    fetchCompetitions();\n    \n    const subscription = supabase\n      .channel('competitions_changes')\n      .on('postgres_changes', { \n        event: '*', \n        schema: 'public', \n        table: 'competitions' \n      }, (payload) => {\n        // Refresh the competition list when there are changes\n        fetchCompetitions();\n      })\n      .subscribe();\n      \n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [selectedTab]);\n  \n  // Refresh when the screen comes into focus\n  useFocusEffect(\n    useCallback(() => {\n      fetchCompetitions();\n    }, [selectedTab])\n  );\n  \n  const onRefresh = () => {\n    setRefreshing(true);\n    fetchCompetitions();\n  };\n  \n  const handleCompetitionPress = (competition) => {\n    navigation.navigate('CompetitionDetails', { \n      competitionId: competition.id,\n      title: competition.title,\n    });\n  };\n  \n  const tabs = [\n    { key: 'all', label: 'All' },\n    { key: 'individual', label: 'Individual' },\n    { key: 'business', label: 'Business' },\n  ];\n  \n  const renderEmptyList = () => {\n    if (loading) return null;\n    \n    return (\n      <View style={styles.emptyContainer}>\n        <Feather name=\"award\" size={60} color=\"#CBD5E1\" />\n        <Text style={styles.emptyText}>\n          No competitions available right now.\n          {selectedTab !== 'all' && ` Try checking the ${selectedTab === 'individual' ? 'Business' : 'Individual'} category.`}\n        </Text>\n      </View>\n    );\n  };\n  \n  return (\n    <View style={styles.container}>\n      <TabsComponent \n        tabs={tabs} \n        selectedTab={selectedTab} \n        onTabChange={setSelectedTab} \n      />\n      \n      {loading && !refreshing ? (\n        <View style={styles.loadingContainer}>\n          <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n          <Text style={styles.loadingText}>Loading competitions...</Text>\n        </View>\n      ) : (\n        <FlatList\n          data={competitions}\n          keyExtractor={(item) => item.id.toString()}\n          renderItem={({ item }) => (\n            <CompetitionCard \n              competition={item} \n              onPress={() => handleCompetitionPress(item)} \n            />\n          )}\n          contentContainerStyle={{ padding: 12 }}\n          ItemSeparatorComponent={() => <View style={styles.separator} />}\n          refreshControl={\n            <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n          }\n          ListEmptyComponent={renderEmptyList}\n        />\n      )}\n    </View>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,cAAA;AAAA,OAAAC,iBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAWhE,SAASC,cAAc,QAAQ,0BAA0B;AACzD,SAASC,OAAO,QAAQ,oBAAoB;AAC5C,OAAOC,QAAQ;AACf,OAAOC,eAAe;AACtB,OAAOC,aAAa;AACpB,SAASC,YAAY,EAAEC,KAAK;AAAoB,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAEhD,eAAe,SAASC,UAAUA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC7C,IAAAC,SAAA,GAAwCzB,QAAQ,CAAC,EAAE,CAAC;IAAA0B,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7CG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EACpC,IAAAI,UAAA,GAA8B9B,QAAQ,CAAC,IAAI,CAAC;IAAA+B,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAC1B,IAAAG,UAAA,GAAoClC,QAAQ,CAAC,KAAK,CAAC;IAAAmC,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA5CE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAChC,IAAAG,UAAA,GAAsCtC,QAAQ,CAAC,KAAK,CAAC;IAAAuC,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAA9CE,WAAW,GAAAD,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAElC,IAAMG,iBAAiB;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;MACpC,IAAI;QACFX,UAAU,CAAC,IAAI,CAAC;QAEhB,IAAIY,KAAK,GAAGhC,QAAQ,CACjBiC,IAAI,CAAC,cAAc,CAAC,CACpBC,MAAM,CAAC,uBAAuB,CAAC,CAC/BC,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,CACtBC,KAAK,CAAC,YAAY,EAAE;UAAEC,SAAS,EAAE;QAAM,CAAC,CAAC;QAG5C,IAAIV,WAAW,KAAK,KAAK,EAAE;UACzBK,KAAK,GAAGA,KAAK,CAACG,EAAE,CAAC,MAAM,EAAER,WAAW,CAAC;QACvC;QAEA,IAAAW,YAAA,SAA8BN,KAAK;UAA3BO,IAAI,GAAAD,YAAA,CAAJC,IAAI;UAAEC,KAAK,GAAAF,YAAA,CAALE,KAAK;QAEnB,IAAIA,KAAK,EAAE,MAAMA,KAAK;QAEtBxB,eAAe,CAACuB,IAAI,IAAI,EAAE,CAAC;MAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpD7C,KAAK,CAAC+C,KAAK,CAAC,OAAO,EAAE,sDAAsD,CAAC;MAC9E,CAAC,SAAS;QACRtB,UAAU,CAAC,KAAK,CAAC;QACjBI,aAAa,CAAC,KAAK,CAAC;MACtB;IACF,CAAC;IAAA,gBA3BKK,iBAAiBA,CAAA;MAAA,OAAAC,KAAA,CAAAa,KAAA,OAAAC,SAAA;IAAA;EAAA,GA2BtB;EAGDxD,SAAS,CAAC,YAAM;IACdyC,iBAAiB,CAAC,CAAC;IAEnB,IAAMgB,YAAY,GAAG7C,QAAQ,CAC1B8C,OAAO,CAAC,sBAAsB,CAAC,CAC/BC,EAAE,CAAC,kBAAkB,EAAE;MACtBC,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE,QAAQ;MAChBC,KAAK,EAAE;IACT,CAAC,EAAE,UAACC,OAAO,EAAK;MAEdtB,iBAAiB,CAAC,CAAC;IACrB,CAAC,CAAC,CACDuB,SAAS,CAAC,CAAC;IAEd,OAAO,YAAM;MACXP,YAAY,CAACQ,WAAW,CAAC,CAAC;IAC5B,CAAC;EACH,CAAC,EAAE,CAAC1B,WAAW,CAAC,CAAC;EAGjB7B,cAAc,CACZT,WAAW,CAAC,YAAM;IAChBwC,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAACF,WAAW,CAAC,CAClB,CAAC;EAED,IAAM2B,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;IACtB9B,aAAa,CAAC,IAAI,CAAC;IACnBK,iBAAiB,CAAC,CAAC;EACrB,CAAC;EAED,IAAM0B,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAIC,WAAW,EAAK;IAC9C7C,UAAU,CAAC8C,QAAQ,CAAC,oBAAoB,EAAE;MACxCC,aAAa,EAAEF,WAAW,CAACG,EAAE;MAC7BC,KAAK,EAAEJ,WAAW,CAACI;IACrB,CAAC,CAAC;EACJ,CAAC;EAED,IAAMC,IAAI,GAAG,CACX;IAAEC,GAAG,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAM,CAAC,EAC5B;IAAED,GAAG,EAAE,YAAY;IAAEC,KAAK,EAAE;EAAa,CAAC,EAC1C;IAAED,GAAG,EAAE,UAAU;IAAEC,KAAK,EAAE;EAAW,CAAC,CACvC;EAED,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;IAC5B,IAAI7C,OAAO,EAAE,OAAO,IAAI;IAExB,OACEX,KAAA,CAAClB,IAAI;MAAC2E,KAAK,EAAEC,MAAM,CAACC,cAAe;MAAAC,QAAA,GACjC9D,IAAA,CAACP,OAAO;QAACsE,IAAI,EAAC,OAAO;QAACC,IAAI,EAAE,EAAG;QAACC,KAAK,EAAC;MAAS,CAAE,CAAC,EAClD/D,KAAA,CAACjB,IAAI;QAAC0E,KAAK,EAAEC,MAAM,CAACM,SAAU;QAAAJ,QAAA,GAAC,sCAE7B,EAACzC,WAAW,KAAK,KAAK,IAAI,qBAAqBA,WAAW,KAAK,YAAY,GAAG,UAAU,GAAG,YAAY,YAAY;MAAA,CAC/G,CAAC;IAAA,CACH,CAAC;EAEX,CAAC;EAED,OACEnB,KAAA,CAAClB,IAAI;IAAC2E,KAAK,EAAEC,MAAM,CAACO,SAAU;IAAAL,QAAA,GAC5B9D,IAAA,CAACJ,aAAa;MACZ2D,IAAI,EAAEA,IAAK;MACXlC,WAAW,EAAEA,WAAY;MACzB+C,WAAW,EAAE9C;IAAe,CAC7B,CAAC,EAEDT,OAAO,IAAI,CAACI,UAAU,GACrBf,KAAA,CAAClB,IAAI;MAAC2E,KAAK,EAAEC,MAAM,CAACS,gBAAiB;MAAAP,QAAA,GACnC9D,IAAA,CAACZ,iBAAiB;QAAC4E,IAAI,EAAC,OAAO;QAACC,KAAK,EAAEnE,KAAK,CAACwE,MAAM,CAACC;MAAQ,CAAE,CAAC,EAC/DvE,IAAA,CAACf,IAAI;QAAC0E,KAAK,EAAEC,MAAM,CAACY,WAAY;QAAAV,QAAA,EAAC;MAAuB,CAAM,CAAC;IAAA,CAC3D,CAAC,GAEP9D,IAAA,CAACd,QAAQ;MACP+C,IAAI,EAAExB,YAAa;MACnBgE,YAAY,EAAE,SAAdA,YAAYA,CAAGC,IAAI;QAAA,OAAKA,IAAI,CAACrB,EAAE,CAACsB,QAAQ,CAAC,CAAC;MAAA,CAAC;MAC3CC,UAAU,EAAE,SAAZA,UAAUA,CAAAC,KAAA;QAAA,IAAKH,IAAI,GAAAG,KAAA,CAAJH,IAAI;QAAA,OACjB1E,IAAA,CAACL,eAAe;UACduD,WAAW,EAAEwB,IAAK;UAClBI,OAAO,EAAE,SAATA,OAAOA,CAAA;YAAA,OAAQ7B,sBAAsB,CAACyB,IAAI,CAAC;UAAA;QAAC,CAC7C,CAAC;MAAA,CACF;MACFK,qBAAqB,EAAE;QAAEC,OAAO,EAAE;MAAG,CAAE;MACvCC,sBAAsB,EAAE,SAAxBA,sBAAsBA,CAAA;QAAA,OAAQjF,IAAA,CAAChB,IAAI;UAAC2E,KAAK,EAAEC,MAAM,CAACsB;QAAU,CAAE,CAAC;MAAA,CAAC;MAChEC,cAAc,EACZnF,IAAA,CAACb,cAAc;QAAC8B,UAAU,EAAEA,UAAW;QAAC+B,SAAS,EAAEA;MAAU,CAAE,CAChE;MACDoC,kBAAkB,EAAE1B;IAAgB,CACrC,CACF;EAAA,CACG,CAAC;AAEX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}