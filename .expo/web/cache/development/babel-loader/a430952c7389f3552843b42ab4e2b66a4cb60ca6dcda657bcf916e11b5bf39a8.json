{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { theme } from \"../styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  container: {\n    marginBottom: 16\n  },\n  tab: {\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    marginRight: 8,\n    borderRadius: 20\n  },\n  selectedTab: {\n    backgroundColor: theme.colors.primary\n  },\n  unselectedTab: {\n    backgroundColor: theme.colors.gray[200]\n  },\n  tabText: {\n    fontWeight: '500'\n  },\n  selectedTabText: {\n    color: theme.colors.white\n  },\n  unselectedTabText: {\n    color: theme.colors.gray[700]\n  }\n});\nexport default function TabsComponent(_ref) {\n  var tabs = _ref.tabs,\n    selectedTab = _ref.selectedTab,\n    onTabChange = _ref.onTabChange;\n  if (!tabs || tabs.length === 0) return null;\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(ScrollView, {\n      horizontal: true,\n      showsHorizontalScrollIndicator: false,\n      contentContainerStyle: {\n        paddingHorizontal: 4\n      },\n      children: tabs.map(function (tab) {\n        return _jsx(TouchableOpacity, {\n          style: [styles.tab, selectedTab === tab.key ? styles.selectedTab : styles.unselectedTab],\n          onPress: function onPress() {\n            return onTabChange(tab.key);\n          },\n          children: _jsx(Text, {\n            style: [styles.tabText, selectedTab === tab.key ? styles.selectedTabText : styles.unselectedTabText],\n            children: tab.label\n          })\n        }, tab.key);\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","View","Text","TouchableOpacity","ScrollView","StyleSheet","theme","jsx","_jsx","styles","create","container","marginBottom","tab","paddingVertical","paddingHorizontal","marginRight","borderRadius","selectedTab","backgroundColor","colors","primary","unselectedTab","gray","tabText","fontWeight","selectedTabText","color","white","unselectedTabText","TabsComponent","_ref","tabs","onTabChange","length","style","children","horizontal","showsHorizontalScrollIndicator","contentContainerStyle","map","key","onPress","label"],"sources":["/home/runner/workspace/src/components/TabsComponent.js"],"sourcesContent":["import React from 'react';\nimport { View, Text, TouchableOpacity, ScrollView, StyleSheet } from 'react-native';\nimport { theme } from '../styles';\n\nconst styles = StyleSheet.create({\n  container: {\n    marginBottom: 16,\n  },\n  tab: {\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    marginRight: 8,\n    borderRadius: 20,\n  },\n  selectedTab: {\n    backgroundColor: theme.colors.primary,\n  },\n  unselectedTab: {\n    backgroundColor: theme.colors.gray[200],\n  },\n  tabText: {\n    fontWeight: '500',\n  },\n  selectedTabText: {\n    color: theme.colors.white,\n  },\n  unselectedTabText: {\n    color: theme.colors.gray[700],\n  }\n});\n\nexport default function TabsComponent({ tabs, selectedTab, onTabChange }) {\n  if (!tabs || tabs.length === 0) return null;\n  \n  return (\n    <View style={styles.container}>\n      <ScrollView \n        horizontal \n        showsHorizontalScrollIndicator={false}\n        contentContainerStyle={{ paddingHorizontal: 4 }}\n      >\n        {tabs.map((tab) => (\n          <TouchableOpacity\n            key={tab.key}\n            style={[\n              styles.tab,\n              selectedTab === tab.key ? styles.selectedTab : styles.unselectedTab\n            ]}\n            onPress={() => onTabChange(tab.key)}\n          >\n            <Text\n              style={[\n                styles.tabText,\n                selectedTab === tab.key ? styles.selectedTabText : styles.unselectedTabText\n              ]}\n            >\n              {tab.label}\n            </Text>\n          </TouchableOpacity>\n        ))}\n      </ScrollView>\n    </View>\n  );\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAE1B,SAASC,KAAK;AAAoB,SAAAC,GAAA,IAAAC,IAAA;AAElC,IAAMC,MAAM,GAAGJ,UAAU,CAACK,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTC,YAAY,EAAE;EAChB,CAAC;EACDC,GAAG,EAAE;IACHC,eAAe,EAAE,CAAC;IAClBC,iBAAiB,EAAE,EAAE;IACrBC,WAAW,EAAE,CAAC;IACdC,YAAY,EAAE;EAChB,CAAC;EACDC,WAAW,EAAE;IACXC,eAAe,EAAEb,KAAK,CAACc,MAAM,CAACC;EAChC,CAAC;EACDC,aAAa,EAAE;IACbH,eAAe,EAAEb,KAAK,CAACc,MAAM,CAACG,IAAI,CAAC,GAAG;EACxC,CAAC;EACDC,OAAO,EAAE;IACPC,UAAU,EAAE;EACd,CAAC;EACDC,eAAe,EAAE;IACfC,KAAK,EAAErB,KAAK,CAACc,MAAM,CAACQ;EACtB,CAAC;EACDC,iBAAiB,EAAE;IACjBF,KAAK,EAAErB,KAAK,CAACc,MAAM,CAACG,IAAI,CAAC,GAAG;EAC9B;AACF,CAAC,CAAC;AAEF,eAAe,SAASO,aAAaA,CAAAC,IAAA,EAAqC;EAAA,IAAlCC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAAEd,WAAW,GAAAa,IAAA,CAAXb,WAAW;IAAEe,WAAW,GAAAF,IAAA,CAAXE,WAAW;EACpE,IAAI,CAACD,IAAI,IAAIA,IAAI,CAACE,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;EAE3C,OACE1B,IAAA,CAACP,IAAI;IAACkC,KAAK,EAAE1B,MAAM,CAACE,SAAU;IAAAyB,QAAA,EAC5B5B,IAAA,CAACJ,UAAU;MACTiC,UAAU;MACVC,8BAA8B,EAAE,KAAM;MACtCC,qBAAqB,EAAE;QAAExB,iBAAiB,EAAE;MAAE,CAAE;MAAAqB,QAAA,EAE/CJ,IAAI,CAACQ,GAAG,CAAC,UAAC3B,GAAG;QAAA,OACZL,IAAA,CAACL,gBAAgB;UAEfgC,KAAK,EAAE,CACL1B,MAAM,CAACI,GAAG,EACVK,WAAW,KAAKL,GAAG,CAAC4B,GAAG,GAAGhC,MAAM,CAACS,WAAW,GAAGT,MAAM,CAACa,aAAa,CACnE;UACFoB,OAAO,EAAE,SAATA,OAAOA,CAAA;YAAA,OAAQT,WAAW,CAACpB,GAAG,CAAC4B,GAAG,CAAC;UAAA,CAAC;UAAAL,QAAA,EAEpC5B,IAAA,CAACN,IAAI;YACHiC,KAAK,EAAE,CACL1B,MAAM,CAACe,OAAO,EACdN,WAAW,KAAKL,GAAG,CAAC4B,GAAG,GAAGhC,MAAM,CAACiB,eAAe,GAAGjB,MAAM,CAACoB,iBAAiB,CAC3E;YAAAO,QAAA,EAEDvB,GAAG,CAAC8B;UAAK,CACN;QAAC,GAdF9B,GAAG,CAAC4B,GAeO,CAAC;MAAA,CACpB;IAAC,CACQ;EAAC,CACT,CAAC;AAEX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}