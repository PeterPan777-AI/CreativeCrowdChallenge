{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Feather } from '@expo/vector-icons';\nimport { useAuth } from \"../context/AuthContext\";\nimport supabase from \"../utils/supabaseClient\";\nimport UserProfileHeader from \"../components/UserProfileHeader\";\nimport SubmissionItem from \"../components/SubmissionItem\";\nimport { globalStyles, theme, combineStyles } from \"../styles\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background\n  },\n  contentContainer: {\n    padding: 16\n  },\n  statsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    backgroundColor: theme.colors.white,\n    borderRadius: 8,\n    padding: 16,\n    marginBottom: 24,\n    marginTop: 16,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 1,\n    elevation: 1\n  },\n  statColumn: {\n    alignItems: 'center',\n    flex: 1\n  },\n  statColumnBordered: {\n    borderLeftWidth: 1,\n    borderRightWidth: 1,\n    borderColor: theme.colors.gray[200]\n  },\n  statValue: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: theme.colors.gray[800]\n  },\n  bestScoreValue: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  },\n  statLabel: {\n    color: theme.colors.gray[600]\n  },\n  sectionTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: theme.colors.gray[800],\n    marginBottom: 16\n  },\n  emptyStateContainer: {\n    backgroundColor: theme.colors.white,\n    borderRadius: 8,\n    padding: 32,\n    alignItems: 'center'\n  },\n  emptyStateText: {\n    color: theme.colors.gray[500],\n    marginTop: 16,\n    textAlign: 'center'\n  },\n  browseButton: {\n    marginTop: 16,\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: 24,\n    paddingVertical: 8,\n    borderRadius: 8\n  },\n  browseButtonText: {\n    color: theme.colors.white,\n    fontWeight: '500'\n  },\n  submissionContainer: {\n    marginBottom: 16\n  },\n  ratingRow: {\n    flexDirection: 'row',\n    marginTop: 8\n  },\n  ratingContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  ratingText: {\n    color: theme.colors.gray[700],\n    marginLeft: 4\n  },\n  viewCompetitionButton: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  viewCompetitionText: {\n    color: theme.colors.primary,\n    fontWeight: '500',\n    marginRight: 4\n  },\n  logoutButton: {\n    backgroundColor: theme.colors.gray[200],\n    paddingVertical: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginBottom: 40\n  },\n  logoutText: {\n    color: theme.colors.gray[800],\n    fontWeight: '500'\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: theme.colors.background\n  },\n  loadingText: {\n    color: theme.colors.gray[600],\n    marginTop: 16\n  }\n});\nexport default function ProfileScreen(_ref) {\n  var _stats$highestRated;\n  var navigation = _ref.navigation;\n  var _useAuth = useAuth(),\n    user = _useAuth.user,\n    userDetails = _useAuth.userDetails,\n    signOut = _useAuth.signOut;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    userSubmissions = _useState2[0],\n    setUserSubmissions = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    refreshing = _useState6[0],\n    setRefreshing = _useState6[1];\n  var _useState7 = useState({\n      submissionsCount: 0,\n      averageRating: 0,\n      highestRated: null\n    }),\n    _useState8 = _slicedToArray(_useState7, 2),\n    stats = _useState8[0],\n    setStats = _useState8[1];\n  var fetchUserSubmissions = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!user) return;\n      try {\n        setLoading(true);\n        var _yield$supabase$from$ = yield supabase.from('submissions').select(`\n          *,\n          competitions(id, title, type, status),\n          ratings(rating)\n        `).eq('user_id', user.id).order('created_at', {\n            ascending: false\n          }),\n          data = _yield$supabase$from$.data,\n          error = _yield$supabase$from$.error;\n        if (error) throw error;\n        var processedSubmissions = data.map(function (submission) {\n          var ratings = submission.ratings || [];\n          var avgRating = ratings.length ? ratings.reduce(function (sum, r) {\n            return sum + r.rating;\n          }, 0) / ratings.length : 0;\n          return _objectSpread(_objectSpread({}, submission), {}, {\n            avgRating: parseFloat(avgRating.toFixed(1))\n          });\n        });\n        setUserSubmissions(processedSubmissions);\n        if (processedSubmissions.length > 0) {\n          var totalRatings = processedSubmissions.reduce(function (sum, s) {\n            return sum + s.avgRating;\n          }, 0);\n          var avgRating = totalRatings / processedSubmissions.length;\n          var highestRated = _toConsumableArray(processedSubmissions).sort(function (a, b) {\n            return b.avgRating - a.avgRating;\n          })[0];\n          setStats({\n            submissionsCount: processedSubmissions.length,\n            averageRating: parseFloat(avgRating.toFixed(1)) || 0,\n            highestRated: highestRated\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching user submissions:', error);\n        Alert.alert('Error', 'Failed to load your submissions');\n      } finally {\n        setLoading(false);\n        setRefreshing(false);\n      }\n    });\n    return function fetchUserSubmissions() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    if (user) {\n      fetchUserSubmissions();\n    }\n  }, [user]);\n  var onRefresh = function onRefresh() {\n    setRefreshing(true);\n    fetchUserSubmissions();\n  };\n  var handleLogout = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      Alert.alert('Confirm Logout', 'Are you sure you want to log out?', [{\n        text: 'Cancel',\n        style: 'cancel'\n      }, {\n        text: 'Logout',\n        style: 'destructive',\n        onPress: signOut\n      }]);\n    });\n    return function handleLogout() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleViewCompetition = function handleViewCompetition(competitionId) {\n    navigation.navigate('Home', {\n      screen: 'CompetitionDetails',\n      params: {\n        competitionId: competitionId\n      }\n    });\n  };\n  if (!user || loading) {\n    return _jsxs(View, {\n      style: styles.loadingContainer,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: theme.colors.primary\n      }), _jsx(Text, {\n        style: styles.loadingText,\n        children: \"Loading profile...\"\n      })]\n    });\n  }\n  return _jsx(ScrollView, {\n    style: styles.container,\n    refreshControl: _jsx(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: onRefresh\n    }),\n    children: _jsxs(View, {\n      style: styles.contentContainer,\n      children: [_jsx(UserProfileHeader, {\n        userDetails: userDetails,\n        stats: stats\n      }), _jsxs(View, {\n        style: styles.statsContainer,\n        children: [_jsxs(View, {\n          style: styles.statColumn,\n          children: [_jsx(Text, {\n            style: styles.statValue,\n            children: stats.submissionsCount\n          }), _jsx(Text, {\n            style: styles.statLabel,\n            children: \"Submissions\"\n          })]\n        }), _jsxs(View, {\n          style: [styles.statColumn, styles.statColumnBordered],\n          children: [_jsx(Text, {\n            style: styles.statValue,\n            children: stats.averageRating\n          }), _jsx(Text, {\n            style: styles.statLabel,\n            children: \"Avg Rating\"\n          })]\n        }), _jsxs(View, {\n          style: styles.statColumn,\n          children: [_jsx(Text, {\n            style: styles.bestScoreValue,\n            children: ((_stats$highestRated = stats.highestRated) == null ? void 0 : _stats$highestRated.avgRating) || 0\n          }), _jsx(Text, {\n            style: styles.statLabel,\n            children: \"Best Score\"\n          })]\n        })]\n      }), _jsxs(View, {\n        style: globalStyles.mb5,\n        children: [_jsx(Text, {\n          style: styles.sectionTitle,\n          children: \"Your Submissions\"\n        }), userSubmissions.length === 0 ? _jsxs(View, {\n          style: styles.emptyStateContainer,\n          children: [_jsx(Feather, {\n            name: \"file-text\",\n            size: 48,\n            color: \"#CBD5E1\"\n          }), _jsx(Text, {\n            style: styles.emptyStateText,\n            children: \"You haven't submitted any entries yet.\"\n          }), _jsx(TouchableOpacity, {\n            style: styles.browseButton,\n            onPress: function onPress() {\n              return navigation.navigate('Home');\n            },\n            children: _jsx(Text, {\n              style: styles.browseButtonText,\n              children: \"Browse Competitions\"\n            })\n          })]\n        }) : userSubmissions.map(function (submission) {\n          return _jsxs(View, {\n            style: styles.submissionContainer,\n            children: [_jsx(SubmissionItem, {\n              submission: submission,\n              showCompetition: true\n            }), _jsxs(View, {\n              style: styles.ratingRow,\n              children: [_jsxs(View, {\n                style: styles.ratingContainer,\n                children: [_jsx(Feather, {\n                  name: \"star\",\n                  size: 16,\n                  color: \"#F59E0B\"\n                }), _jsxs(Text, {\n                  style: styles.ratingText,\n                  children: [\"Average Rating: \", submission.avgRating]\n                })]\n              }), _jsxs(TouchableOpacity, {\n                style: styles.viewCompetitionButton,\n                onPress: function onPress() {\n                  return handleViewCompetition(submission.competition_id);\n                },\n                children: [_jsx(Text, {\n                  style: styles.viewCompetitionText,\n                  children: \"View Competition\"\n                }), _jsx(Feather, {\n                  name: \"chevron-right\",\n                  size: 16,\n                  color: theme.colors.primary\n                })]\n              })]\n            })]\n          }, submission.id);\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: styles.logoutButton,\n        onPress: handleLogout,\n        children: _jsx(Text, {\n          style: styles.logoutText,\n          children: \"Log Out\"\n        })\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","View","Text","TouchableOpacity","ScrollView","ActivityIndicator","Alert","RefreshControl","StyleSheet","Feather","useAuth","supabase","UserProfileHeader","SubmissionItem","globalStyles","theme","combineStyles","jsx","_jsx","jsxs","_jsxs","styles","create","container","flex","backgroundColor","colors","background","contentContainer","padding","statsContainer","flexDirection","justifyContent","white","borderRadius","marginBottom","marginTop","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","statColumn","alignItems","statColumnBordered","borderLeftWidth","borderRightWidth","borderColor","gray","statValue","fontSize","fontWeight","color","bestScoreValue","primary","statLabel","sectionTitle","emptyStateContainer","emptyStateText","textAlign","browseButton","paddingHorizontal","paddingVertical","browseButtonText","submissionContainer","ratingRow","ratingContainer","ratingText","marginLeft","viewCompetitionButton","viewCompetitionText","marginRight","logoutButton","logoutText","loadingContainer","loadingText","ProfileScreen","_ref","_stats$highestRated","navigation","_useAuth","user","userDetails","signOut","_useState","_useState2","_slicedToArray","userSubmissions","setUserSubmissions","_useState3","_useState4","loading","setLoading","_useState5","_useState6","refreshing","setRefreshing","_useState7","submissionsCount","averageRating","highestRated","_useState8","stats","setStats","fetchUserSubmissions","_ref2","_asyncToGenerator","_yield$supabase$from$","from","select","eq","id","order","ascending","data","error","processedSubmissions","map","submission","ratings","avgRating","length","reduce","sum","r","rating","_objectSpread","parseFloat","toFixed","totalRatings","s","_toConsumableArray","sort","a","b","console","alert","apply","arguments","onRefresh","handleLogout","_ref3","text","style","onPress","handleViewCompetition","competitionId","navigate","screen","params","children","size","refreshControl","mb5","name","showCompetition","competition_id"],"sources":["/home/runner/workspace/src/screens/ProfileScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  ScrollView,\n  ActivityIndicator,\n  Alert,\n  RefreshControl,\n  StyleSheet,\n} from 'react-native';\nimport { Feather } from '@expo/vector-icons';\nimport { useAuth } from '../context/AuthContext';\nimport supabase from '../utils/supabaseClient';\nimport UserProfileHeader from '../components/UserProfileHeader';\nimport SubmissionItem from '../components/SubmissionItem';\nimport { globalStyles, theme, combineStyles } from '../styles';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n  },\n  contentContainer: {\n    padding: 16,\n  },\n  statsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    backgroundColor: theme.colors.white,\n    borderRadius: 8,\n    padding: 16,\n    marginBottom: 24,\n    marginTop: 16,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.1,\n    shadowRadius: 1,\n    elevation: 1,\n  },\n  statColumn: {\n    alignItems: 'center',\n    flex: 1,\n  },\n  statColumnBordered: {\n    borderLeftWidth: 1,\n    borderRightWidth: 1,\n    borderColor: theme.colors.gray[200],\n  },\n  statValue: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: theme.colors.gray[800],\n  },\n  bestScoreValue: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n  statLabel: {\n    color: theme.colors.gray[600],\n  },\n  sectionTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: theme.colors.gray[800],\n    marginBottom: 16,\n  },\n  emptyStateContainer: {\n    backgroundColor: theme.colors.white,\n    borderRadius: 8,\n    padding: 32,\n    alignItems: 'center',\n  },\n  emptyStateText: {\n    color: theme.colors.gray[500],\n    marginTop: 16,\n    textAlign: 'center',\n  },\n  browseButton: {\n    marginTop: 16,\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: 24,\n    paddingVertical: 8,\n    borderRadius: 8,\n  },\n  browseButtonText: {\n    color: theme.colors.white,\n    fontWeight: '500',\n  },\n  submissionContainer: {\n    marginBottom: 16,\n  },\n  ratingRow: {\n    flexDirection: 'row',\n    marginTop: 8,\n  },\n  ratingContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  ratingText: {\n    color: theme.colors.gray[700],\n    marginLeft: 4,\n  },\n  viewCompetitionButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  viewCompetitionText: {\n    color: theme.colors.primary,\n    fontWeight: '500',\n    marginRight: 4,\n  },\n  logoutButton: {\n    backgroundColor: theme.colors.gray[200],\n    paddingVertical: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginBottom: 40,\n  },\n  logoutText: {\n    color: theme.colors.gray[800],\n    fontWeight: '500',\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: theme.colors.background,\n  },\n  loadingText: {\n    color: theme.colors.gray[600],\n    marginTop: 16,\n  },\n});\n\nexport default function ProfileScreen({ navigation }) {\n  const { user, userDetails, signOut } = useAuth();\n  \n  const [userSubmissions, setUserSubmissions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [stats, setStats] = useState({\n    submissionsCount: 0,\n    averageRating: 0,\n    highestRated: null,\n  });\n  \n  const fetchUserSubmissions = async () => {\n    if (!user) return;\n    \n    try {\n      setLoading(true);\n      \n      const { data, error } = await supabase\n        .from('submissions')\n        .select(`\n          *,\n          competitions(id, title, type, status),\n          ratings(rating)\n        `)\n        .eq('user_id', user.id)\n        .order('created_at', { ascending: false });\n        \n      if (error) throw error;\n      \n      // Process submissions to include average ratings\n      const processedSubmissions = data.map(submission => {\n        const ratings = submission.ratings || [];\n        const avgRating = ratings.length \n          ? ratings.reduce((sum, r) => sum + r.rating, 0) / ratings.length \n          : 0;\n        \n        return {\n          ...submission,\n          avgRating: parseFloat(avgRating.toFixed(1))\n        };\n      });\n      \n      setUserSubmissions(processedSubmissions);\n      \n      // Calculate stats\n      if (processedSubmissions.length > 0) {\n        const totalRatings = processedSubmissions.reduce((sum, s) => sum + s.avgRating, 0);\n        const avgRating = totalRatings / processedSubmissions.length;\n        const highestRated = [...processedSubmissions].sort((a, b) => b.avgRating - a.avgRating)[0];\n        \n        setStats({\n          submissionsCount: processedSubmissions.length,\n          averageRating: parseFloat(avgRating.toFixed(1)) || 0,\n          highestRated: highestRated,\n        });\n      }\n    } catch (error) {\n      console.error('Error fetching user submissions:', error);\n      Alert.alert('Error', 'Failed to load your submissions');\n    } finally {\n      setLoading(false);\n      setRefreshing(false);\n    }\n  };\n  \n  useEffect(() => {\n    if (user) {\n      fetchUserSubmissions();\n    }\n  }, [user]);\n  \n  const onRefresh = () => {\n    setRefreshing(true);\n    fetchUserSubmissions();\n  };\n  \n  const handleLogout = async () => {\n    Alert.alert(\n      'Confirm Logout',\n      'Are you sure you want to log out?',\n      [\n        { text: 'Cancel', style: 'cancel' },\n        { \n          text: 'Logout', \n          style: 'destructive',\n          onPress: signOut\n        }\n      ]\n    );\n  };\n  \n  const handleViewCompetition = (competitionId) => {\n    navigation.navigate('Home', {\n      screen: 'CompetitionDetails',\n      params: { competitionId }\n    });\n  };\n  \n  if (!user || loading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n        <Text style={styles.loadingText}>Loading profile...</Text>\n      </View>\n    );\n  }\n  \n  return (\n    <ScrollView \n      style={styles.container}\n      refreshControl={\n        <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n      }\n    >\n      <View style={styles.contentContainer}>\n        <UserProfileHeader \n          userDetails={userDetails}\n          stats={stats}\n        />\n        \n        {/* User stats */}\n        <View style={styles.statsContainer}>\n          <View style={styles.statColumn}>\n            <Text style={styles.statValue}>{stats.submissionsCount}</Text>\n            <Text style={styles.statLabel}>Submissions</Text>\n          </View>\n          <View style={[styles.statColumn, styles.statColumnBordered]}>\n            <Text style={styles.statValue}>{stats.averageRating}</Text>\n            <Text style={styles.statLabel}>Avg Rating</Text>\n          </View>\n          <View style={styles.statColumn}>\n            <Text style={styles.bestScoreValue}>\n              {stats.highestRated?.avgRating || 0}\n            </Text>\n            <Text style={styles.statLabel}>Best Score</Text>\n          </View>\n        </View>\n        \n        {/* Submissions list */}\n        <View style={globalStyles.mb5}>\n          <Text style={styles.sectionTitle}>\n            Your Submissions\n          </Text>\n          \n          {userSubmissions.length === 0 ? (\n            <View style={styles.emptyStateContainer}>\n              <Feather name=\"file-text\" size={48} color=\"#CBD5E1\" />\n              <Text style={styles.emptyStateText}>\n                You haven't submitted any entries yet.\n              </Text>\n              <TouchableOpacity\n                style={styles.browseButton}\n                onPress={() => navigation.navigate('Home')}\n              >\n                <Text style={styles.browseButtonText}>Browse Competitions</Text>\n              </TouchableOpacity>\n            </View>\n          ) : (\n            userSubmissions.map((submission) => (\n              <View key={submission.id} style={styles.submissionContainer}>\n                <SubmissionItem \n                  submission={submission}\n                  showCompetition={true}\n                />\n                \n                <View style={styles.ratingRow}>\n                  <View style={styles.ratingContainer}>\n                    <Feather name=\"star\" size={16} color=\"#F59E0B\" />\n                    <Text style={styles.ratingText}>\n                      Average Rating: {submission.avgRating}\n                    </Text>\n                  </View>\n                  \n                  <TouchableOpacity\n                    style={styles.viewCompetitionButton}\n                    onPress={() => handleViewCompetition(submission.competition_id)}\n                  >\n                    <Text style={styles.viewCompetitionText}>View Competition</Text>\n                    <Feather name=\"chevron-right\" size={16} color={theme.colors.primary} />\n                  </TouchableOpacity>\n                </View>\n              </View>\n            ))\n          )}\n        </View>\n        \n        {/* Logout button */}\n        <TouchableOpacity\n          style={styles.logoutButton}\n          onPress={handleLogout}\n        >\n          <Text style={styles.logoutText}>Log Out</Text>\n        </TouchableOpacity>\n      </View>\n    </ScrollView>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}