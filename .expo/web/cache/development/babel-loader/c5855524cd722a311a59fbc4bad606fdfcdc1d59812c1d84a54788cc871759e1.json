{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport { Feather } from '@expo/vector-icons';\nimport { useAuth } from \"../context/AuthContext\";\nimport supabase from \"../utils/supabaseClient\";\nimport TabsComponent from \"../components/TabsComponent\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function AdminScreen() {\n  var _useAuth = useAuth(),\n    user = _useAuth.user,\n    userDetails = _useAuth.userDetails;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    refreshing = _useState4[0],\n    setRefreshing = _useState4[1];\n  var _useState5 = useState('categories'),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedTab = _useState6[0],\n    setSelectedTab = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    categorySuggestions = _useState8[0],\n    setCategorySuggestions = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    competitions = _useState10[0],\n    setCompetitions = _useState10[1];\n  useEffect(function () {\n    if (user && (userDetails == null ? void 0 : userDetails.role) === 'admin') {\n      fetchData();\n    }\n    var categorySuggestionSubscription = supabase.channel('category_suggestion_changes').on('postgres_changes', {\n      event: '*',\n      schema: 'public',\n      table: 'category_suggestions'\n    }, function () {\n      fetchCategorySuggestions();\n    }).subscribe();\n    var competitionSubscription = supabase.channel('competition_changes').on('postgres_changes', {\n      event: '*',\n      schema: 'public',\n      table: 'competitions'\n    }, function () {\n      fetchCompetitions();\n    }).subscribe();\n    return function () {\n      categorySuggestionSubscription.unsubscribe();\n      competitionSubscription.unsubscribe();\n    };\n  }, [user, userDetails]);\n  var fetchData = function fetchData() {\n    if (selectedTab === 'categories') {\n      fetchCategorySuggestions();\n    } else {\n      fetchCompetitions();\n    }\n  };\n  var fetchCategorySuggestions = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        var _yield$supabase$from$ = yield supabase.from('category_suggestions').select('*, profiles(username)').order('created_at', {\n            ascending: false\n          }),\n          data = _yield$supabase$from$.data,\n          error = _yield$supabase$from$.error;\n        if (error) throw error;\n        setCategorySuggestions(data || []);\n      } catch (error) {\n        console.error('Error fetching category suggestions:', error);\n        Alert.alert('Error', 'Failed to load category suggestions');\n      } finally {\n        setLoading(false);\n        setRefreshing(false);\n      }\n    });\n    return function fetchCategorySuggestions() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var fetchCompetitions = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        var _yield$supabase$from$2 = yield supabase.from('competitions').select('*, profiles(username)').order('created_at', {\n            ascending: false\n          }),\n          data = _yield$supabase$from$2.data,\n          error = _yield$supabase$from$2.error;\n        if (error) throw error;\n        setCompetitions(data || []);\n      } catch (error) {\n        console.error('Error fetching competitions:', error);\n        Alert.alert('Error', 'Failed to load competitions');\n      } finally {\n        setLoading(false);\n        setRefreshing(false);\n      }\n    });\n    return function fetchCompetitions() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleApproveSuggestion = function () {\n    var _ref3 = _asyncToGenerator(function* (suggestion) {\n      try {\n        var _yield$supabase$from$3 = yield supabase.from('category_suggestions').update({\n            status: 'approved',\n            updated_at: new Date()\n          }).eq('id', suggestion.id),\n          updateError = _yield$supabase$from$3.error;\n        if (updateError) throw updateError;\n        var _yield$supabase$from$4 = yield supabase.from('categories').insert([{\n            name: suggestion.name,\n            description: suggestion.description,\n            created_at: new Date()\n          }]),\n          insertError = _yield$supabase$from$4.error;\n        if (insertError) throw insertError;\n        Alert.alert('Success', 'Category suggestion approved and added to categories');\n        fetchCategorySuggestions();\n      } catch (error) {\n        console.error('Error approving suggestion:', error);\n        Alert.alert('Error', 'Failed to approve category suggestion');\n      }\n    });\n    return function handleApproveSuggestion(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleRejectSuggestion = function () {\n    var _ref4 = _asyncToGenerator(function* (suggestionId) {\n      try {\n        var _yield$supabase$from$5 = yield supabase.from('category_suggestions').update({\n            status: 'rejected',\n            updated_at: new Date()\n          }).eq('id', suggestionId),\n          error = _yield$supabase$from$5.error;\n        if (error) throw error;\n        Alert.alert('Success', 'Category suggestion rejected');\n        fetchCategorySuggestions();\n      } catch (error) {\n        console.error('Error rejecting suggestion:', error);\n        Alert.alert('Error', 'Failed to reject category suggestion');\n      }\n    });\n    return function handleRejectSuggestion(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var handleToggleCompetitionStatus = function () {\n    var _ref5 = _asyncToGenerator(function* (competition) {\n      var newStatus = competition.status === 'active' ? 'inactive' : 'active';\n      try {\n        var _yield$supabase$from$6 = yield supabase.from('competitions').update({\n            status: newStatus,\n            updated_at: new Date()\n          }).eq('id', competition.id),\n          error = _yield$supabase$from$6.error;\n        if (error) throw error;\n        Alert.alert('Success', `Competition ${newStatus === 'active' ? 'activated' : 'deactivated'}`);\n        fetchCompetitions();\n      } catch (error) {\n        console.error('Error updating competition status:', error);\n        Alert.alert('Error', 'Failed to update competition status');\n      }\n    });\n    return function handleToggleCompetitionStatus(_x3) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var onRefresh = function onRefresh() {\n    setRefreshing(true);\n    fetchData();\n  };\n  var renderSuggestionItem = function renderSuggestionItem(_ref6) {\n    var _item$profiles;\n    var item = _ref6.item;\n    var isPending = item.status === 'pending';\n    return _jsxs(View, {\n      className: \"bg-white rounded-lg p-4 shadow-sm mb-4\",\n      children: [_jsxs(View, {\n        className: \"flex-row justify-between items-center mb-2\",\n        children: [_jsx(Text, {\n          className: \"text-lg font-bold text-gray-800\",\n          children: item.name\n        }), _jsx(View, {\n          className: `px-3 py-1 rounded-full ${item.status === 'approved' ? 'bg-green-100' : item.status === 'rejected' ? 'bg-red-100' : 'bg-amber-100'}`,\n          children: _jsx(Text, {\n            className: `text-xs font-medium ${item.status === 'approved' ? 'text-green-800' : item.status === 'rejected' ? 'text-red-800' : 'text-amber-800'}`,\n            children: item.status.charAt(0).toUpperCase() + item.status.slice(1)\n          })\n        })]\n      }), _jsx(Text, {\n        className: \"text-gray-600 mb-3\",\n        children: item.description\n      }), _jsxs(View, {\n        className: \"flex-row justify-between items-center\",\n        children: [_jsxs(Text, {\n          className: \"text-gray-500 text-xs\",\n          children: [\"By \", ((_item$profiles = item.profiles) == null ? void 0 : _item$profiles.username) || 'Unknown user', \" \\u2022 \", new Date(item.created_at).toLocaleDateString()]\n        }), isPending && _jsxs(View, {\n          className: \"flex-row\",\n          children: [_jsx(TouchableOpacity, {\n            className: \"bg-green-500 rounded-lg px-3 py-1.5 mr-2\",\n            onPress: function onPress() {\n              return handleApproveSuggestion(item);\n            },\n            children: _jsx(Text, {\n              className: \"text-white font-medium\",\n              children: \"Approve\"\n            })\n          }), _jsx(TouchableOpacity, {\n            className: \"bg-red-500 rounded-lg px-3 py-1.5\",\n            onPress: function onPress() {\n              return handleRejectSuggestion(item.id);\n            },\n            children: _jsx(Text, {\n              className: \"text-white font-medium\",\n              children: \"Reject\"\n            })\n          })]\n        })]\n      })]\n    });\n  };\n  var renderCompetitionItem = function renderCompetitionItem(_ref7) {\n    var _item$profiles2;\n    var item = _ref7.item;\n    var isActive = item.status === 'active';\n    return _jsxs(View, {\n      className: \"bg-white rounded-lg p-4 shadow-sm mb-4\",\n      children: [_jsxs(View, {\n        className: \"flex-row justify-between items-center mb-2\",\n        children: [_jsxs(View, {\n          className: \"flex-row items-center\",\n          children: [_jsx(Feather, {\n            name: item.type === 'business' ? 'briefcase' : 'user',\n            size: 16,\n            color: item.type === 'business' ? '#F59E0B' : '#8B5CF6',\n            style: {\n              marginRight: 8\n            }\n          }), _jsx(Text, {\n            className: \"text-lg font-bold text-gray-800\",\n            children: item.title\n          })]\n        }), _jsx(View, {\n          className: `px-3 py-1 rounded-full ${isActive ? 'bg-green-100' : 'bg-gray-100'}`,\n          children: _jsx(Text, {\n            className: `text-xs font-medium ${isActive ? 'text-green-800' : 'text-gray-800'}`,\n            children: item.status.charAt(0).toUpperCase() + item.status.slice(1)\n          })\n        })]\n      }), _jsx(Text, {\n        className: \"text-gray-600 mb-3\",\n        children: item.description.length > 100 ? item.description.substring(0, 100) + '...' : item.description\n      }), _jsxs(View, {\n        className: \"flex-row mb-3\",\n        children: [_jsxs(View, {\n          className: \"mr-4\",\n          children: [_jsx(Text, {\n            className: \"text-xs text-gray-500\",\n            children: \"Prize\"\n          }), _jsxs(Text, {\n            className: \"text-gray-800\",\n            children: [\"$\", item.prize_amount]\n          })]\n        }), _jsxs(View, {\n          className: \"mr-4\",\n          children: [_jsx(Text, {\n            className: \"text-xs text-gray-500\",\n            children: \"Created By\"\n          }), _jsx(Text, {\n            className: \"text-gray-800\",\n            children: ((_item$profiles2 = item.profiles) == null ? void 0 : _item$profiles2.username) || 'Unknown'\n          })]\n        }), _jsxs(View, {\n          children: [_jsx(Text, {\n            className: \"text-xs text-gray-500\",\n            children: \"Dates\"\n          }), _jsxs(Text, {\n            className: \"text-gray-800\",\n            children: [new Date(item.start_date).toLocaleDateString(), \" - \", new Date(item.end_date).toLocaleDateString()]\n          })]\n        })]\n      }), _jsx(TouchableOpacity, {\n        className: `rounded-lg py-2 items-center ${isActive ? 'bg-red-100' : 'bg-green-100'}`,\n        onPress: function onPress() {\n          return handleToggleCompetitionStatus(item);\n        },\n        children: _jsx(Text, {\n          className: `font-medium ${isActive ? 'text-red-700' : 'text-green-700'}`,\n          children: isActive ? 'Deactivate Competition' : 'Activate Competition'\n        })\n      })]\n    });\n  };\n  if ((userDetails == null ? void 0 : userDetails.role) !== 'admin') {\n    return _jsxs(View, {\n      className: \"flex-1 justify-center items-center bg-background p-6\",\n      children: [_jsx(Feather, {\n        name: \"lock\",\n        size: 60,\n        color: \"#EF4444\"\n      }), _jsx(Text, {\n        className: \"text-xl font-bold text-gray-800 mt-6 text-center\",\n        children: \"Admin Access Required\"\n      }), _jsx(Text, {\n        className: \"text-center text-gray-600 mt-2\",\n        children: \"You don't have permission to access this area.\"\n      })]\n    });\n  }\n  var tabs = [{\n    key: 'categories',\n    label: 'Category Suggestions'\n  }, {\n    key: 'competitions',\n    label: 'Competitions'\n  }];\n  return _jsx(View, {\n    className: \"flex-1 bg-background\",\n    children: _jsxs(View, {\n      className: \"p-4\",\n      children: [_jsx(Text, {\n        className: \"text-2xl font-bold text-gray-800 mb-2\",\n        children: \"Admin Dashboard\"\n      }), _jsx(Text, {\n        className: \"text-gray-600 mb-6\",\n        children: \"Manage category suggestions and competitions\"\n      }), _jsx(TabsComponent, {\n        tabs: tabs,\n        selectedTab: selectedTab,\n        onTabChange: function onTabChange(tab) {\n          setSelectedTab(tab);\n          setLoading(true);\n          if (tab === 'categories') {\n            fetchCategorySuggestions();\n          } else {\n            fetchCompetitions();\n          }\n        }\n      }), loading && !refreshing ? _jsxs(View, {\n        className: \"flex-1 justify-center items-center py-20\",\n        children: [_jsx(ActivityIndicator, {\n          size: \"large\",\n          color: \"#3B82F6\"\n        }), _jsx(Text, {\n          className: \"text-gray-600 mt-4\",\n          children: \"Loading data...\"\n        })]\n      }) : _jsx(ScrollView, {\n        refreshControl: _jsx(RefreshControl, {\n          refreshing: refreshing,\n          onRefresh: onRefresh\n        }),\n        children: selectedTab === 'categories' ? categorySuggestions.length === 0 ? _jsxs(View, {\n          className: \"bg-white rounded-lg p-8 items-center mt-4\",\n          children: [_jsx(Feather, {\n            name: \"list\",\n            size: 48,\n            color: \"#CBD5E1\"\n          }), _jsx(Text, {\n            className: \"text-gray-500 mt-4 text-center\",\n            children: \"No category suggestions found\"\n          })]\n        }) : _jsx(FlatList, {\n          data: categorySuggestions,\n          keyExtractor: function keyExtractor(item) {\n            return item.id.toString();\n          },\n          renderItem: renderSuggestionItem,\n          scrollEnabled: false\n        }) : competitions.length === 0 ? _jsxs(View, {\n          className: \"bg-white rounded-lg p-8 items-center mt-4\",\n          children: [_jsx(Feather, {\n            name: \"award\",\n            size: 48,\n            color: \"#CBD5E1\"\n          }), _jsx(Text, {\n            className: \"text-gray-500 mt-4 text-center\",\n            children: \"No competitions found\"\n          })]\n        }) : _jsx(FlatList, {\n          data: competitions,\n          keyExtractor: function keyExtractor(item) {\n            return item.id.toString();\n          },\n          renderItem: renderCompetitionItem,\n          scrollEnabled: false\n        })\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","View","Text","TouchableOpacity","FlatList","Alert","ActivityIndicator","ScrollView","RefreshControl","Feather","useAuth","supabase","TabsComponent","jsx","_jsx","jsxs","_jsxs","AdminScreen","_useAuth","user","userDetails","_useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","refreshing","setRefreshing","_useState5","_useState6","selectedTab","setSelectedTab","_useState7","_useState8","categorySuggestions","setCategorySuggestions","_useState9","_useState10","competitions","setCompetitions","role","fetchData","categorySuggestionSubscription","channel","on","event","schema","table","fetchCategorySuggestions","subscribe","competitionSubscription","fetchCompetitions","unsubscribe","_ref","_asyncToGenerator","_yield$supabase$from$","from","select","order","ascending","data","error","console","alert","apply","arguments","_ref2","_yield$supabase$from$2","handleApproveSuggestion","_ref3","suggestion","_yield$supabase$from$3","update","status","updated_at","Date","eq","id","updateError","_yield$supabase$from$4","insert","name","description","created_at","insertError","_x","handleRejectSuggestion","_ref4","suggestionId","_yield$supabase$from$5","_x2","handleToggleCompetitionStatus","_ref5","competition","newStatus","_yield$supabase$from$6","_x3","onRefresh","renderSuggestionItem","_ref6","_item$profiles","item","isPending","className","children","charAt","toUpperCase","slice","profiles","username","toLocaleDateString","onPress","renderCompetitionItem","_ref7","_item$profiles2","isActive","type","size","color","style","marginRight","title","length","substring","prize_amount","start_date","end_date","tabs","key","label","onTabChange","tab","refreshControl","keyExtractor","toString","renderItem","scrollEnabled"],"sources":["/home/runner/workspace/src/screens/AdminScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  FlatList,\n  Alert,\n  ActivityIndicator,\n  ScrollView,\n  RefreshControl,\n} from 'react-native';\nimport { Feather } from '@expo/vector-icons';\nimport { useAuth } from '../context/AuthContext';\nimport supabase from '../utils/supabaseClient';\nimport TabsComponent from '../components/TabsComponent';\n\nexport default function AdminScreen() {\n  const { user, userDetails } = useAuth();\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [selectedTab, setSelectedTab] = useState('categories'); // 'categories', 'competitions'\n  \n  const [categorySuggestions, setCategorySuggestions] = useState([]);\n  const [competitions, setCompetitions] = useState([]);\n  \n  useEffect(() => {\n    if (user && userDetails?.role === 'admin') {\n      fetchData();\n    }\n    \n    // Set up subscription for category suggestions\n    const categorySuggestionSubscription = supabase\n      .channel('category_suggestion_changes')\n      .on('postgres_changes', { \n        event: '*', \n        schema: 'public', \n        table: 'category_suggestions'\n      }, () => {\n        fetchCategorySuggestions();\n      })\n      .subscribe();\n      \n    // Set up subscription for competitions\n    const competitionSubscription = supabase\n      .channel('competition_changes')\n      .on('postgres_changes', { \n        event: '*', \n        schema: 'public', \n        table: 'competitions'\n      }, () => {\n        fetchCompetitions();\n      })\n      .subscribe();\n    \n    return () => {\n      categorySuggestionSubscription.unsubscribe();\n      competitionSubscription.unsubscribe();\n    };\n  }, [user, userDetails]);\n  \n  const fetchData = () => {\n    if (selectedTab === 'categories') {\n      fetchCategorySuggestions();\n    } else {\n      fetchCompetitions();\n    }\n  };\n  \n  const fetchCategorySuggestions = async () => {\n    try {\n      setLoading(true);\n      const { data, error } = await supabase\n        .from('category_suggestions')\n        .select('*, profiles(username)')\n        .order('created_at', { ascending: false });\n        \n      if (error) throw error;\n      setCategorySuggestions(data || []);\n    } catch (error) {\n      console.error('Error fetching category suggestions:', error);\n      Alert.alert('Error', 'Failed to load category suggestions');\n    } finally {\n      setLoading(false);\n      setRefreshing(false);\n    }\n  };\n  \n  const fetchCompetitions = async () => {\n    try {\n      setLoading(true);\n      const { data, error } = await supabase\n        .from('competitions')\n        .select('*, profiles(username)')\n        .order('created_at', { ascending: false });\n        \n      if (error) throw error;\n      setCompetitions(data || []);\n    } catch (error) {\n      console.error('Error fetching competitions:', error);\n      Alert.alert('Error', 'Failed to load competitions');\n    } finally {\n      setLoading(false);\n      setRefreshing(false);\n    }\n  };\n  \n  const handleApproveSuggestion = async (suggestion) => {\n    try {\n      // First, update the suggestion status\n      const { error: updateError } = await supabase\n        .from('category_suggestions')\n        .update({ status: 'approved', updated_at: new Date() })\n        .eq('id', suggestion.id);\n        \n      if (updateError) throw updateError;\n      \n      // Then, add the category to the categories table\n      const { error: insertError } = await supabase\n        .from('categories')\n        .insert([\n          {\n            name: suggestion.name,\n            description: suggestion.description,\n            created_at: new Date(),\n          }\n        ]);\n        \n      if (insertError) throw insertError;\n      \n      Alert.alert('Success', 'Category suggestion approved and added to categories');\n      fetchCategorySuggestions();\n    } catch (error) {\n      console.error('Error approving suggestion:', error);\n      Alert.alert('Error', 'Failed to approve category suggestion');\n    }\n  };\n  \n  const handleRejectSuggestion = async (suggestionId) => {\n    try {\n      const { error } = await supabase\n        .from('category_suggestions')\n        .update({ status: 'rejected', updated_at: new Date() })\n        .eq('id', suggestionId);\n        \n      if (error) throw error;\n      \n      Alert.alert('Success', 'Category suggestion rejected');\n      fetchCategorySuggestions();\n    } catch (error) {\n      console.error('Error rejecting suggestion:', error);\n      Alert.alert('Error', 'Failed to reject category suggestion');\n    }\n  };\n  \n  const handleToggleCompetitionStatus = async (competition) => {\n    const newStatus = competition.status === 'active' ? 'inactive' : 'active';\n    \n    try {\n      const { error } = await supabase\n        .from('competitions')\n        .update({ status: newStatus, updated_at: new Date() })\n        .eq('id', competition.id);\n        \n      if (error) throw error;\n      \n      Alert.alert('Success', `Competition ${newStatus === 'active' ? 'activated' : 'deactivated'}`);\n      fetchCompetitions();\n    } catch (error) {\n      console.error('Error updating competition status:', error);\n      Alert.alert('Error', 'Failed to update competition status');\n    }\n  };\n  \n  const onRefresh = () => {\n    setRefreshing(true);\n    fetchData();\n  };\n  \n  const renderSuggestionItem = ({ item }) => {\n    // Don't show action buttons for already processed suggestions\n    const isPending = item.status === 'pending';\n    \n    return (\n      <View className=\"bg-white rounded-lg p-4 shadow-sm mb-4\">\n        <View className=\"flex-row justify-between items-center mb-2\">\n          <Text className=\"text-lg font-bold text-gray-800\">{item.name}</Text>\n          <View className={`px-3 py-1 rounded-full ${\n            item.status === 'approved' ? 'bg-green-100' : \n            item.status === 'rejected' ? 'bg-red-100' : 'bg-amber-100'\n          }`}>\n            <Text className={`text-xs font-medium ${\n              item.status === 'approved' ? 'text-green-800' : \n              item.status === 'rejected' ? 'text-red-800' : 'text-amber-800'\n            }`}>\n              {item.status.charAt(0).toUpperCase() + item.status.slice(1)}\n            </Text>\n          </View>\n        </View>\n        \n        <Text className=\"text-gray-600 mb-3\">{item.description}</Text>\n        \n        <View className=\"flex-row justify-between items-center\">\n          <Text className=\"text-gray-500 text-xs\">\n            By {item.profiles?.username || 'Unknown user'} • {new Date(item.created_at).toLocaleDateString()}\n          </Text>\n          \n          {isPending && (\n            <View className=\"flex-row\">\n              <TouchableOpacity\n                className=\"bg-green-500 rounded-lg px-3 py-1.5 mr-2\"\n                onPress={() => handleApproveSuggestion(item)}\n              >\n                <Text className=\"text-white font-medium\">Approve</Text>\n              </TouchableOpacity>\n              \n              <TouchableOpacity\n                className=\"bg-red-500 rounded-lg px-3 py-1.5\"\n                onPress={() => handleRejectSuggestion(item.id)}\n              >\n                <Text className=\"text-white font-medium\">Reject</Text>\n              </TouchableOpacity>\n            </View>\n          )}\n        </View>\n      </View>\n    );\n  };\n  \n  const renderCompetitionItem = ({ item }) => {\n    const isActive = item.status === 'active';\n    \n    return (\n      <View className=\"bg-white rounded-lg p-4 shadow-sm mb-4\">\n        <View className=\"flex-row justify-between items-center mb-2\">\n          <View className=\"flex-row items-center\">\n            <Feather \n              name={item.type === 'business' ? 'briefcase' : 'user'} \n              size={16} \n              color={item.type === 'business' ? '#F59E0B' : '#8B5CF6'} \n              style={{ marginRight: 8 }}\n            />\n            <Text className=\"text-lg font-bold text-gray-800\">{item.title}</Text>\n          </View>\n          <View className={`px-3 py-1 rounded-full ${isActive ? 'bg-green-100' : 'bg-gray-100'}`}>\n            <Text className={`text-xs font-medium ${isActive ? 'text-green-800' : 'text-gray-800'}`}>\n              {item.status.charAt(0).toUpperCase() + item.status.slice(1)}\n            </Text>\n          </View>\n        </View>\n        \n        <Text className=\"text-gray-600 mb-3\">\n          {item.description.length > 100 \n            ? item.description.substring(0, 100) + '...' \n            : item.description}\n        </Text>\n        \n        <View className=\"flex-row mb-3\">\n          <View className=\"mr-4\">\n            <Text className=\"text-xs text-gray-500\">Prize</Text>\n            <Text className=\"text-gray-800\">${item.prize_amount}</Text>\n          </View>\n          \n          <View className=\"mr-4\">\n            <Text className=\"text-xs text-gray-500\">Created By</Text>\n            <Text className=\"text-gray-800\">{item.profiles?.username || 'Unknown'}</Text>\n          </View>\n          \n          <View>\n            <Text className=\"text-xs text-gray-500\">Dates</Text>\n            <Text className=\"text-gray-800\">\n              {new Date(item.start_date).toLocaleDateString()} - {new Date(item.end_date).toLocaleDateString()}\n            </Text>\n          </View>\n        </View>\n        \n        <TouchableOpacity\n          className={`rounded-lg py-2 items-center ${isActive ? 'bg-red-100' : 'bg-green-100'}`}\n          onPress={() => handleToggleCompetitionStatus(item)}\n        >\n          <Text className={`font-medium ${isActive ? 'text-red-700' : 'text-green-700'}`}>\n            {isActive ? 'Deactivate Competition' : 'Activate Competition'}\n          </Text>\n        </TouchableOpacity>\n      </View>\n    );\n  };\n  \n  // Check if user is admin\n  if (userDetails?.role !== 'admin') {\n    return (\n      <View className=\"flex-1 justify-center items-center bg-background p-6\">\n        <Feather name=\"lock\" size={60} color=\"#EF4444\" />\n        <Text className=\"text-xl font-bold text-gray-800 mt-6 text-center\">\n          Admin Access Required\n        </Text>\n        <Text className=\"text-center text-gray-600 mt-2\">\n          You don't have permission to access this area.\n        </Text>\n      </View>\n    );\n  }\n  \n  const tabs = [\n    { key: 'categories', label: 'Category Suggestions' },\n    { key: 'competitions', label: 'Competitions' },\n  ];\n  \n  return (\n    <View className=\"flex-1 bg-background\">\n      <View className=\"p-4\">\n        <Text className=\"text-2xl font-bold text-gray-800 mb-2\">Admin Dashboard</Text>\n        <Text className=\"text-gray-600 mb-6\">\n          Manage category suggestions and competitions\n        </Text>\n        \n        <TabsComponent \n          tabs={tabs} \n          selectedTab={selectedTab} \n          onTabChange={(tab) => {\n            setSelectedTab(tab);\n            setLoading(true);\n            if (tab === 'categories') {\n              fetchCategorySuggestions();\n            } else {\n              fetchCompetitions();\n            }\n          }} \n        />\n        \n        {loading && !refreshing ? (\n          <View className=\"flex-1 justify-center items-center py-20\">\n            <ActivityIndicator size=\"large\" color=\"#3B82F6\" />\n            <Text className=\"text-gray-600 mt-4\">Loading data...</Text>\n          </View>\n        ) : (\n          <ScrollView\n            refreshControl={\n              <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n            }\n          >\n            {selectedTab === 'categories' ? (\n              categorySuggestions.length === 0 ? (\n                <View className=\"bg-white rounded-lg p-8 items-center mt-4\">\n                  <Feather name=\"list\" size={48} color=\"#CBD5E1\" />\n                  <Text className=\"text-gray-500 mt-4 text-center\">\n                    No category suggestions found\n                  </Text>\n                </View>\n              ) : (\n                <FlatList\n                  data={categorySuggestions}\n                  keyExtractor={(item) => item.id.toString()}\n                  renderItem={renderSuggestionItem}\n                  scrollEnabled={false}\n                />\n              )\n            ) : (\n              competitions.length === 0 ? (\n                <View className=\"bg-white rounded-lg p-8 items-center mt-4\">\n                  <Feather name=\"award\" size={48} color=\"#CBD5E1\" />\n                  <Text className=\"text-gray-500 mt-4 text-center\">\n                    No competitions found\n                  </Text>\n                </View>\n              ) : (\n                <FlatList\n                  data={competitions}\n                  keyExtractor={(item) => item.id.toString()}\n                  renderItem={renderCompetitionItem}\n                  scrollEnabled={false}\n                />\n              )\n            )}\n          </ScrollView>\n        )}\n      </View>\n    </View>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,iBAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,cAAA;AAWnD,SAASC,OAAO,QAAQ,oBAAoB;AAC5C,SAASC,OAAO;AAChB,OAAOC,QAAQ;AACf,OAAOC,aAAa;AAAoC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAExD,eAAe,SAASC,WAAWA,CAAA,EAAG;EACpC,IAAAC,QAAA,GAA8BR,OAAO,CAAC,CAAC;IAA/BS,IAAI,GAAAD,QAAA,CAAJC,IAAI;IAAEC,WAAW,GAAAF,QAAA,CAAXE,WAAW;EACzB,IAAAC,SAAA,GAA8BtB,QAAQ,CAAC,IAAI,CAAC;IAAAuB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAAI,UAAA,GAAoC3B,QAAQ,CAAC,KAAK,CAAC;IAAA4B,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA5CE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAChC,IAAAG,UAAA,GAAsC/B,QAAQ,CAAC,YAAY,CAAC;IAAAgC,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAArDE,WAAW,GAAAD,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAElC,IAAAG,UAAA,GAAsDnC,QAAQ,CAAC,EAAE,CAAC;IAAAoC,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAA3DE,mBAAmB,GAAAD,UAAA;IAAEE,sBAAsB,GAAAF,UAAA;EAClD,IAAAG,UAAA,GAAwCvC,QAAQ,CAAC,EAAE,CAAC;IAAAwC,WAAA,GAAAhB,cAAA,CAAAe,UAAA;IAA7CE,YAAY,GAAAD,WAAA;IAAEE,eAAe,GAAAF,WAAA;EAEpCvC,SAAS,CAAC,YAAM;IACd,IAAImB,IAAI,IAAI,CAAAC,WAAW,oBAAXA,WAAW,CAAEsB,IAAI,MAAK,OAAO,EAAE;MACzCC,SAAS,CAAC,CAAC;IACb;IAGA,IAAMC,8BAA8B,GAAGjC,QAAQ,CAC5CkC,OAAO,CAAC,6BAA6B,CAAC,CACtCC,EAAE,CAAC,kBAAkB,EAAE;MACtBC,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE,QAAQ;MAChBC,KAAK,EAAE;IACT,CAAC,EAAE,YAAM;MACPC,wBAAwB,CAAC,CAAC;IAC5B,CAAC,CAAC,CACDC,SAAS,CAAC,CAAC;IAGd,IAAMC,uBAAuB,GAAGzC,QAAQ,CACrCkC,OAAO,CAAC,qBAAqB,CAAC,CAC9BC,EAAE,CAAC,kBAAkB,EAAE;MACtBC,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE,QAAQ;MAChBC,KAAK,EAAE;IACT,CAAC,EAAE,YAAM;MACPI,iBAAiB,CAAC,CAAC;IACrB,CAAC,CAAC,CACDF,SAAS,CAAC,CAAC;IAEd,OAAO,YAAM;MACXP,8BAA8B,CAACU,WAAW,CAAC,CAAC;MAC5CF,uBAAuB,CAACE,WAAW,CAAC,CAAC;IACvC,CAAC;EACH,CAAC,EAAE,CAACnC,IAAI,EAAEC,WAAW,CAAC,CAAC;EAEvB,IAAMuB,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;IACtB,IAAIX,WAAW,KAAK,YAAY,EAAE;MAChCkB,wBAAwB,CAAC,CAAC;IAC5B,CAAC,MAAM;MACLG,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC;EAED,IAAMH,wBAAwB;IAAA,IAAAK,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAC3C,IAAI;QACF/B,UAAU,CAAC,IAAI,CAAC;QAChB,IAAAgC,qBAAA,SAA8B9C,QAAQ,CACnC+C,IAAI,CAAC,sBAAsB,CAAC,CAC5BC,MAAM,CAAC,uBAAuB,CAAC,CAC/BC,KAAK,CAAC,YAAY,EAAE;YAAEC,SAAS,EAAE;UAAM,CAAC,CAAC;UAHpCC,IAAI,GAAAL,qBAAA,CAAJK,IAAI;UAAEC,KAAK,GAAAN,qBAAA,CAALM,KAAK;QAKnB,IAAIA,KAAK,EAAE,MAAMA,KAAK;QACtB1B,sBAAsB,CAACyB,IAAI,IAAI,EAAE,CAAC;MACpC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;QAC5D1D,KAAK,CAAC4D,KAAK,CAAC,OAAO,EAAE,qCAAqC,CAAC;MAC7D,CAAC,SAAS;QACRxC,UAAU,CAAC,KAAK,CAAC;QACjBI,aAAa,CAAC,KAAK,CAAC;MACtB;IACF,CAAC;IAAA,gBAjBKqB,wBAAwBA,CAAA;MAAA,OAAAK,IAAA,CAAAW,KAAA,OAAAC,SAAA;IAAA;EAAA,GAiB7B;EAED,IAAMd,iBAAiB;IAAA,IAAAe,KAAA,GAAAZ,iBAAA,CAAG,aAAY;MACpC,IAAI;QACF/B,UAAU,CAAC,IAAI,CAAC;QAChB,IAAA4C,sBAAA,SAA8B1D,QAAQ,CACnC+C,IAAI,CAAC,cAAc,CAAC,CACpBC,MAAM,CAAC,uBAAuB,CAAC,CAC/BC,KAAK,CAAC,YAAY,EAAE;YAAEC,SAAS,EAAE;UAAM,CAAC,CAAC;UAHpCC,IAAI,GAAAO,sBAAA,CAAJP,IAAI;UAAEC,KAAK,GAAAM,sBAAA,CAALN,KAAK;QAKnB,IAAIA,KAAK,EAAE,MAAMA,KAAK;QACtBtB,eAAe,CAACqB,IAAI,IAAI,EAAE,CAAC;MAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpD1D,KAAK,CAAC4D,KAAK,CAAC,OAAO,EAAE,6BAA6B,CAAC;MACrD,CAAC,SAAS;QACRxC,UAAU,CAAC,KAAK,CAAC;QACjBI,aAAa,CAAC,KAAK,CAAC;MACtB;IACF,CAAC;IAAA,gBAjBKwB,iBAAiBA,CAAA;MAAA,OAAAe,KAAA,CAAAF,KAAA,OAAAC,SAAA;IAAA;EAAA,GAiBtB;EAED,IAAMG,uBAAuB;IAAA,IAAAC,KAAA,GAAAf,iBAAA,CAAG,WAAOgB,UAAU,EAAK;MACpD,IAAI;QAEF,IAAAC,sBAAA,SAAqC9D,QAAQ,CAC1C+C,IAAI,CAAC,sBAAsB,CAAC,CAC5BgB,MAAM,CAAC;YAAEC,MAAM,EAAE,UAAU;YAAEC,UAAU,EAAE,IAAIC,IAAI,CAAC;UAAE,CAAC,CAAC,CACtDC,EAAE,CAAC,IAAI,EAAEN,UAAU,CAACO,EAAE,CAAC;UAHXC,WAAW,GAAAP,sBAAA,CAAlBV,KAAK;QAKb,IAAIiB,WAAW,EAAE,MAAMA,WAAW;QAGlC,IAAAC,sBAAA,SAAqCtE,QAAQ,CAC1C+C,IAAI,CAAC,YAAY,CAAC,CAClBwB,MAAM,CAAC,CACN;YACEC,IAAI,EAAEX,UAAU,CAACW,IAAI;YACrBC,WAAW,EAAEZ,UAAU,CAACY,WAAW;YACnCC,UAAU,EAAE,IAAIR,IAAI,CAAC;UACvB,CAAC,CACF,CAAC;UARWS,WAAW,GAAAL,sBAAA,CAAlBlB,KAAK;QAUb,IAAIuB,WAAW,EAAE,MAAMA,WAAW;QAElCjF,KAAK,CAAC4D,KAAK,CAAC,SAAS,EAAE,sDAAsD,CAAC;QAC9Ef,wBAAwB,CAAC,CAAC;MAC5B,CAAC,CAAC,OAAOa,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACnD1D,KAAK,CAAC4D,KAAK,CAAC,OAAO,EAAE,uCAAuC,CAAC;MAC/D;IACF,CAAC;IAAA,gBA7BKK,uBAAuBA,CAAAiB,EAAA;MAAA,OAAAhB,KAAA,CAAAL,KAAA,OAAAC,SAAA;IAAA;EAAA,GA6B5B;EAED,IAAMqB,sBAAsB;IAAA,IAAAC,KAAA,GAAAjC,iBAAA,CAAG,WAAOkC,YAAY,EAAK;MACrD,IAAI;QACF,IAAAC,sBAAA,SAAwBhF,QAAQ,CAC7B+C,IAAI,CAAC,sBAAsB,CAAC,CAC5BgB,MAAM,CAAC;YAAEC,MAAM,EAAE,UAAU;YAAEC,UAAU,EAAE,IAAIC,IAAI,CAAC;UAAE,CAAC,CAAC,CACtDC,EAAE,CAAC,IAAI,EAAEY,YAAY,CAAC;UAHjB3B,KAAK,GAAA4B,sBAAA,CAAL5B,KAAK;QAKb,IAAIA,KAAK,EAAE,MAAMA,KAAK;QAEtB1D,KAAK,CAAC4D,KAAK,CAAC,SAAS,EAAE,8BAA8B,CAAC;QACtDf,wBAAwB,CAAC,CAAC;MAC5B,CAAC,CAAC,OAAOa,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACnD1D,KAAK,CAAC4D,KAAK,CAAC,OAAO,EAAE,sCAAsC,CAAC;MAC9D;IACF,CAAC;IAAA,gBAfKuB,sBAAsBA,CAAAI,GAAA;MAAA,OAAAH,KAAA,CAAAvB,KAAA,OAAAC,SAAA;IAAA;EAAA,GAe3B;EAED,IAAM0B,6BAA6B;IAAA,IAAAC,KAAA,GAAAtC,iBAAA,CAAG,WAAOuC,WAAW,EAAK;MAC3D,IAAMC,SAAS,GAAGD,WAAW,CAACpB,MAAM,KAAK,QAAQ,GAAG,UAAU,GAAG,QAAQ;MAEzE,IAAI;QACF,IAAAsB,sBAAA,SAAwBtF,QAAQ,CAC7B+C,IAAI,CAAC,cAAc,CAAC,CACpBgB,MAAM,CAAC;YAAEC,MAAM,EAAEqB,SAAS;YAAEpB,UAAU,EAAE,IAAIC,IAAI,CAAC;UAAE,CAAC,CAAC,CACrDC,EAAE,CAAC,IAAI,EAAEiB,WAAW,CAAChB,EAAE,CAAC;UAHnBhB,KAAK,GAAAkC,sBAAA,CAALlC,KAAK;QAKb,IAAIA,KAAK,EAAE,MAAMA,KAAK;QAEtB1D,KAAK,CAAC4D,KAAK,CAAC,SAAS,EAAE,eAAe+B,SAAS,KAAK,QAAQ,GAAG,WAAW,GAAG,aAAa,EAAE,CAAC;QAC7F3C,iBAAiB,CAAC,CAAC;MACrB,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;QAC1D1D,KAAK,CAAC4D,KAAK,CAAC,OAAO,EAAE,qCAAqC,CAAC;MAC7D;IACF,CAAC;IAAA,gBAjBK4B,6BAA6BA,CAAAK,GAAA;MAAA,OAAAJ,KAAA,CAAA5B,KAAA,OAAAC,SAAA;IAAA;EAAA,GAiBlC;EAED,IAAMgC,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;IACtBtE,aAAa,CAAC,IAAI,CAAC;IACnBc,SAAS,CAAC,CAAC;EACb,CAAC;EAED,IAAMyD,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAAC,KAAA,EAAiB;IAAA,IAAAC,cAAA;IAAA,IAAXC,IAAI,GAAAF,KAAA,CAAJE,IAAI;IAElC,IAAMC,SAAS,GAAGD,IAAI,CAAC5B,MAAM,KAAK,SAAS;IAE3C,OACE3D,KAAA,CAACf,IAAI;MAACwG,SAAS,EAAC,wCAAwC;MAAAC,QAAA,GACtD1F,KAAA,CAACf,IAAI;QAACwG,SAAS,EAAC,4CAA4C;QAAAC,QAAA,GAC1D5F,IAAA,CAACZ,IAAI;UAACuG,SAAS,EAAC,iCAAiC;UAAAC,QAAA,EAAEH,IAAI,CAACpB;QAAI,CAAO,CAAC,EACpErE,IAAA,CAACb,IAAI;UAACwG,SAAS,EAAE,0BACfF,IAAI,CAAC5B,MAAM,KAAK,UAAU,GAAG,cAAc,GAC3C4B,IAAI,CAAC5B,MAAM,KAAK,UAAU,GAAG,YAAY,GAAG,cAAc,EACzD;UAAA+B,QAAA,EACD5F,IAAA,CAACZ,IAAI;YAACuG,SAAS,EAAE,uBACfF,IAAI,CAAC5B,MAAM,KAAK,UAAU,GAAG,gBAAgB,GAC7C4B,IAAI,CAAC5B,MAAM,KAAK,UAAU,GAAG,cAAc,GAAG,gBAAgB,EAC7D;YAAA+B,QAAA,EACAH,IAAI,CAAC5B,MAAM,CAACgC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGL,IAAI,CAAC5B,MAAM,CAACkC,KAAK,CAAC,CAAC;UAAC,CACvD;QAAC,CACH,CAAC;MAAA,CACH,CAAC,EAEP/F,IAAA,CAACZ,IAAI;QAACuG,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAEH,IAAI,CAACnB;MAAW,CAAO,CAAC,EAE9DpE,KAAA,CAACf,IAAI;QAACwG,SAAS,EAAC,uCAAuC;QAAAC,QAAA,GACrD1F,KAAA,CAACd,IAAI;UAACuG,SAAS,EAAC,uBAAuB;UAAAC,QAAA,GAAC,KACnC,EAAC,EAAAJ,cAAA,GAAAC,IAAI,CAACO,QAAQ,qBAAbR,cAAA,CAAeS,QAAQ,KAAI,cAAc,EAAC,UAAG,EAAC,IAAIlC,IAAI,CAAC0B,IAAI,CAAClB,UAAU,CAAC,CAAC2B,kBAAkB,CAAC,CAAC;QAAA,CAC5F,CAAC,EAENR,SAAS,IACRxF,KAAA,CAACf,IAAI;UAACwG,SAAS,EAAC,UAAU;UAAAC,QAAA,GACxB5F,IAAA,CAACX,gBAAgB;YACfsG,SAAS,EAAC,0CAA0C;YACpDQ,OAAO,EAAE,SAATA,OAAOA,CAAA;cAAA,OAAQ3C,uBAAuB,CAACiC,IAAI,CAAC;YAAA,CAAC;YAAAG,QAAA,EAE7C5F,IAAA,CAACZ,IAAI;cAACuG,SAAS,EAAC,wBAAwB;cAAAC,QAAA,EAAC;YAAO,CAAM;UAAC,CACvC,CAAC,EAEnB5F,IAAA,CAACX,gBAAgB;YACfsG,SAAS,EAAC,mCAAmC;YAC7CQ,OAAO,EAAE,SAATA,OAAOA,CAAA;cAAA,OAAQzB,sBAAsB,CAACe,IAAI,CAACxB,EAAE,CAAC;YAAA,CAAC;YAAA2B,QAAA,EAE/C5F,IAAA,CAACZ,IAAI;cAACuG,SAAS,EAAC,wBAAwB;cAAAC,QAAA,EAAC;YAAM,CAAM;UAAC,CACtC,CAAC;QAAA,CACf,CACP;MAAA,CACG,CAAC;IAAA,CACH,CAAC;EAEX,CAAC;EAED,IAAMQ,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAAC,KAAA,EAAiB;IAAA,IAAAC,eAAA;IAAA,IAAXb,IAAI,GAAAY,KAAA,CAAJZ,IAAI;IACnC,IAAMc,QAAQ,GAAGd,IAAI,CAAC5B,MAAM,KAAK,QAAQ;IAEzC,OACE3D,KAAA,CAACf,IAAI;MAACwG,SAAS,EAAC,wCAAwC;MAAAC,QAAA,GACtD1F,KAAA,CAACf,IAAI;QAACwG,SAAS,EAAC,4CAA4C;QAAAC,QAAA,GAC1D1F,KAAA,CAACf,IAAI;UAACwG,SAAS,EAAC,uBAAuB;UAAAC,QAAA,GACrC5F,IAAA,CAACL,OAAO;YACN0E,IAAI,EAAEoB,IAAI,CAACe,IAAI,KAAK,UAAU,GAAG,WAAW,GAAG,MAAO;YACtDC,IAAI,EAAE,EAAG;YACTC,KAAK,EAAEjB,IAAI,CAACe,IAAI,KAAK,UAAU,GAAG,SAAS,GAAG,SAAU;YACxDG,KAAK,EAAE;cAAEC,WAAW,EAAE;YAAE;UAAE,CAC3B,CAAC,EACF5G,IAAA,CAACZ,IAAI;YAACuG,SAAS,EAAC,iCAAiC;YAAAC,QAAA,EAAEH,IAAI,CAACoB;UAAK,CAAO,CAAC;QAAA,CACjE,CAAC,EACP7G,IAAA,CAACb,IAAI;UAACwG,SAAS,EAAE,0BAA0BY,QAAQ,GAAG,cAAc,GAAG,aAAa,EAAG;UAAAX,QAAA,EACrF5F,IAAA,CAACZ,IAAI;YAACuG,SAAS,EAAE,uBAAuBY,QAAQ,GAAG,gBAAgB,GAAG,eAAe,EAAG;YAAAX,QAAA,EACrFH,IAAI,CAAC5B,MAAM,CAACgC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGL,IAAI,CAAC5B,MAAM,CAACkC,KAAK,CAAC,CAAC;UAAC,CACvD;QAAC,CACH,CAAC;MAAA,CACH,CAAC,EAEP/F,IAAA,CAACZ,IAAI;QAACuG,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EACjCH,IAAI,CAACnB,WAAW,CAACwC,MAAM,GAAG,GAAG,GAC1BrB,IAAI,CAACnB,WAAW,CAACyC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,KAAK,GAC1CtB,IAAI,CAACnB;MAAW,CAChB,CAAC,EAEPpE,KAAA,CAACf,IAAI;QAACwG,SAAS,EAAC,eAAe;QAAAC,QAAA,GAC7B1F,KAAA,CAACf,IAAI;UAACwG,SAAS,EAAC,MAAM;UAAAC,QAAA,GACpB5F,IAAA,CAACZ,IAAI;YAACuG,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EAAC;UAAK,CAAM,CAAC,EACpD1F,KAAA,CAACd,IAAI;YAACuG,SAAS,EAAC,eAAe;YAAAC,QAAA,GAAC,GAAC,EAACH,IAAI,CAACuB,YAAY;UAAA,CAAO,CAAC;QAAA,CACvD,CAAC,EAEP9G,KAAA,CAACf,IAAI;UAACwG,SAAS,EAAC,MAAM;UAAAC,QAAA,GACpB5F,IAAA,CAACZ,IAAI;YAACuG,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EAAC;UAAU,CAAM,CAAC,EACzD5F,IAAA,CAACZ,IAAI;YAACuG,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAE,EAAAU,eAAA,GAAAb,IAAI,CAACO,QAAQ,qBAAbM,eAAA,CAAeL,QAAQ,KAAI;UAAS,CAAO,CAAC;QAAA,CACzE,CAAC,EAEP/F,KAAA,CAACf,IAAI;UAAAyG,QAAA,GACH5F,IAAA,CAACZ,IAAI;YAACuG,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EAAC;UAAK,CAAM,CAAC,EACpD1F,KAAA,CAACd,IAAI;YAACuG,SAAS,EAAC,eAAe;YAAAC,QAAA,GAC5B,IAAI7B,IAAI,CAAC0B,IAAI,CAACwB,UAAU,CAAC,CAACf,kBAAkB,CAAC,CAAC,EAAC,KAAG,EAAC,IAAInC,IAAI,CAAC0B,IAAI,CAACyB,QAAQ,CAAC,CAAChB,kBAAkB,CAAC,CAAC;UAAA,CAC5F,CAAC;QAAA,CACH,CAAC;MAAA,CACH,CAAC,EAEPlG,IAAA,CAACX,gBAAgB;QACfsG,SAAS,EAAE,gCAAgCY,QAAQ,GAAG,YAAY,GAAG,cAAc,EAAG;QACtFJ,OAAO,EAAE,SAATA,OAAOA,CAAA;UAAA,OAAQpB,6BAA6B,CAACU,IAAI,CAAC;QAAA,CAAC;QAAAG,QAAA,EAEnD5F,IAAA,CAACZ,IAAI;UAACuG,SAAS,EAAE,eAAeY,QAAQ,GAAG,cAAc,GAAG,gBAAgB,EAAG;UAAAX,QAAA,EAC5EW,QAAQ,GAAG,wBAAwB,GAAG;QAAsB,CACzD;MAAC,CACS,CAAC;IAAA,CACf,CAAC;EAEX,CAAC;EAGD,IAAI,CAAAjG,WAAW,oBAAXA,WAAW,CAAEsB,IAAI,MAAK,OAAO,EAAE;IACjC,OACE1B,KAAA,CAACf,IAAI;MAACwG,SAAS,EAAC,sDAAsD;MAAAC,QAAA,GACpE5F,IAAA,CAACL,OAAO;QAAC0E,IAAI,EAAC,MAAM;QAACoC,IAAI,EAAE,EAAG;QAACC,KAAK,EAAC;MAAS,CAAE,CAAC,EACjD1G,IAAA,CAACZ,IAAI;QAACuG,SAAS,EAAC,kDAAkD;QAAAC,QAAA,EAAC;MAEnE,CAAM,CAAC,EACP5F,IAAA,CAACZ,IAAI;QAACuG,SAAS,EAAC,gCAAgC;QAAAC,QAAA,EAAC;MAEjD,CAAM,CAAC;IAAA,CACH,CAAC;EAEX;EAEA,IAAMuB,IAAI,GAAG,CACX;IAAEC,GAAG,EAAE,YAAY;IAAEC,KAAK,EAAE;EAAuB,CAAC,EACpD;IAAED,GAAG,EAAE,cAAc;IAAEC,KAAK,EAAE;EAAe,CAAC,CAC/C;EAED,OACErH,IAAA,CAACb,IAAI;IAACwG,SAAS,EAAC,sBAAsB;IAAAC,QAAA,EACpC1F,KAAA,CAACf,IAAI;MAACwG,SAAS,EAAC,KAAK;MAAAC,QAAA,GACnB5F,IAAA,CAACZ,IAAI;QAACuG,SAAS,EAAC,uCAAuC;QAAAC,QAAA,EAAC;MAAe,CAAM,CAAC,EAC9E5F,IAAA,CAACZ,IAAI;QAACuG,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAErC,CAAM,CAAC,EAEP5F,IAAA,CAACF,aAAa;QACZqH,IAAI,EAAEA,IAAK;QACXjG,WAAW,EAAEA,WAAY;QACzBoG,WAAW,EAAE,SAAbA,WAAWA,CAAGC,GAAG,EAAK;UACpBpG,cAAc,CAACoG,GAAG,CAAC;UACnB5G,UAAU,CAAC,IAAI,CAAC;UAChB,IAAI4G,GAAG,KAAK,YAAY,EAAE;YACxBnF,wBAAwB,CAAC,CAAC;UAC5B,CAAC,MAAM;YACLG,iBAAiB,CAAC,CAAC;UACrB;QACF;MAAE,CACH,CAAC,EAED7B,OAAO,IAAI,CAACI,UAAU,GACrBZ,KAAA,CAACf,IAAI;QAACwG,SAAS,EAAC,0CAA0C;QAAAC,QAAA,GACxD5F,IAAA,CAACR,iBAAiB;UAACiH,IAAI,EAAC,OAAO;UAACC,KAAK,EAAC;QAAS,CAAE,CAAC,EAClD1G,IAAA,CAACZ,IAAI;UAACuG,SAAS,EAAC,oBAAoB;UAAAC,QAAA,EAAC;QAAe,CAAM,CAAC;MAAA,CACvD,CAAC,GAEP5F,IAAA,CAACP,UAAU;QACT+H,cAAc,EACZxH,IAAA,CAACN,cAAc;UAACoB,UAAU,EAAEA,UAAW;UAACuE,SAAS,EAAEA;QAAU,CAAE,CAChE;QAAAO,QAAA,EAEA1E,WAAW,KAAK,YAAY,GAC3BI,mBAAmB,CAACwF,MAAM,KAAK,CAAC,GAC9B5G,KAAA,CAACf,IAAI;UAACwG,SAAS,EAAC,2CAA2C;UAAAC,QAAA,GACzD5F,IAAA,CAACL,OAAO;YAAC0E,IAAI,EAAC,MAAM;YAACoC,IAAI,EAAE,EAAG;YAACC,KAAK,EAAC;UAAS,CAAE,CAAC,EACjD1G,IAAA,CAACZ,IAAI;YAACuG,SAAS,EAAC,gCAAgC;YAAAC,QAAA,EAAC;UAEjD,CAAM,CAAC;QAAA,CACH,CAAC,GAEP5F,IAAA,CAACV,QAAQ;UACP0D,IAAI,EAAE1B,mBAAoB;UAC1BmG,YAAY,EAAE,SAAdA,YAAYA,CAAGhC,IAAI;YAAA,OAAKA,IAAI,CAACxB,EAAE,CAACyD,QAAQ,CAAC,CAAC;UAAA,CAAC;UAC3CC,UAAU,EAAErC,oBAAqB;UACjCsC,aAAa,EAAE;QAAM,CACtB,CACF,GAEDlG,YAAY,CAACoF,MAAM,KAAK,CAAC,GACvB5G,KAAA,CAACf,IAAI;UAACwG,SAAS,EAAC,2CAA2C;UAAAC,QAAA,GACzD5F,IAAA,CAACL,OAAO;YAAC0E,IAAI,EAAC,OAAO;YAACoC,IAAI,EAAE,EAAG;YAACC,KAAK,EAAC;UAAS,CAAE,CAAC,EAClD1G,IAAA,CAACZ,IAAI;YAACuG,SAAS,EAAC,gCAAgC;YAAAC,QAAA,EAAC;UAEjD,CAAM,CAAC;QAAA,CACH,CAAC,GAEP5F,IAAA,CAACV,QAAQ;UACP0D,IAAI,EAAEtB,YAAa;UACnB+F,YAAY,EAAE,SAAdA,YAAYA,CAAGhC,IAAI;YAAA,OAAKA,IAAI,CAACxB,EAAE,CAACyD,QAAQ,CAAC,CAAC;UAAA,CAAC;UAC3CC,UAAU,EAAEvB,qBAAsB;UAClCwB,aAAa,EAAE;QAAM,CACtB;MAEJ,CACS,CACb;IAAA,CACG;EAAC,CACH,CAAC;AAEX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}