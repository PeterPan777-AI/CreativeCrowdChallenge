{"ast":null,"code":"import React from 'react';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { useAuth } from \"../context/AuthContext\";\nimport { Feather } from '@expo/vector-icons';\nimport AuthScreen from \"../screens/AuthScreen\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport CompetitionDetailsScreen from \"../screens/CompetitionDetailsScreen\";\nimport SubmissionScreen from \"../screens/SubmissionScreen\";\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport CategorySuggestionScreen from \"../screens/CategorySuggestionScreen\";\nimport BusinessCompetitionScreen from \"../screens/BusinessCompetitionScreen\";\nimport AdminScreen from \"../screens/AdminScreen\";\nimport LoadingComponent from \"../components/LoadingComponent\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\nfunction MainTabNavigator() {\n  var _useAuth = useAuth(),\n    userDetails = _useAuth.userDetails;\n  var isAdmin = (userDetails == null ? void 0 : userDetails.role) === 'admin';\n  var isBusiness = (userDetails == null ? void 0 : userDetails.role) === 'business';\n  return _jsxs(Tab.Navigator, {\n    screenOptions: {\n      tabBarActiveTintColor: '#3B82F6',\n      tabBarInactiveTintColor: '#9CA3AF',\n      tabBarStyle: {\n        backgroundColor: '#FFFFFF',\n        borderTopWidth: 1,\n        borderTopColor: '#E5E7EB',\n        paddingBottom: 5,\n        paddingTop: 5\n      },\n      headerShown: false\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeNavigator,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref) {\n          var color = _ref.color,\n            size = _ref.size;\n          return _jsx(Feather, {\n            name: \"home\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    }), isBusiness && _jsx(Tab.Screen, {\n      name: \"Business\",\n      component: BusinessCompetitionScreen,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color,\n            size = _ref2.size;\n          return _jsx(Feather, {\n            name: \"briefcase\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Categories\",\n      component: CategorySuggestionScreen,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color,\n            size = _ref3.size;\n          return _jsx(Feather, {\n            name: \"list\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var color = _ref4.color,\n            size = _ref4.size;\n          return _jsx(Feather, {\n            name: \"user\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    }), isAdmin && _jsx(Tab.Screen, {\n      name: \"Admin\",\n      component: AdminScreen,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref5) {\n          var color = _ref5.color,\n            size = _ref5.size;\n          return _jsx(Feather, {\n            name: \"settings\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    })]\n  });\n}\nfunction HomeNavigator() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: '#3B82F6'\n      },\n      headerTintColor: '#FFFFFF',\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      }\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Competitions\",\n      component: HomeScreen,\n      options: {\n        title: 'Score4Me'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"CompetitionDetails\",\n      component: CompetitionDetailsScreen,\n      options: function options(_ref6) {\n        var _route$params;\n        var route = _ref6.route;\n        return {\n          title: ((_route$params = route.params) == null ? void 0 : _route$params.title) || 'Competition Details'\n        };\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Submission\",\n      component: SubmissionScreen\n    })]\n  });\n}\nexport default function AppNavigator() {\n  var _useAuth2 = useAuth(),\n    user = _useAuth2.user,\n    loading = _useAuth2.loading;\n  if (loading) {\n    return _jsx(LoadingComponent, {});\n  }\n  return _jsx(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: user ? _jsx(Stack.Screen, {\n      name: \"Main\",\n      component: MainTabNavigator\n    }) : _jsx(Stack.Screen, {\n      name: \"Auth\",\n      component: AuthScreen\n    })\n  });\n}","map":{"version":3,"names":["React","createNativeStackNavigator","createBottomTabNavigator","useAuth","Feather","AuthScreen","HomeScreen","CompetitionDetailsScreen","SubmissionScreen","ProfileScreen","CategorySuggestionScreen","BusinessCompetitionScreen","AdminScreen","LoadingComponent","jsx","_jsx","jsxs","_jsxs","Stack","Tab","MainTabNavigator","_useAuth","userDetails","isAdmin","role","isBusiness","Navigator","screenOptions","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarStyle","backgroundColor","borderTopWidth","borderTopColor","paddingBottom","paddingTop","headerShown","children","Screen","name","component","HomeNavigator","options","tabBarIcon","_ref","color","size","_ref2","_ref3","_ref4","_ref5","headerStyle","headerTintColor","headerTitleStyle","fontWeight","title","_ref6","_route$params","route","params","AppNavigator","_useAuth2","user","loading"],"sources":["/home/runner/workspace/src/navigation/AppNavigator.js"],"sourcesContent":["import React from 'react';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { useAuth } from '../context/AuthContext';\nimport { Feather } from '@expo/vector-icons';\n\n// Screens\nimport AuthScreen from '../screens/AuthScreen';\nimport HomeScreen from '../screens/HomeScreen';\nimport CompetitionDetailsScreen from '../screens/CompetitionDetailsScreen';\nimport SubmissionScreen from '../screens/SubmissionScreen';\nimport ProfileScreen from '../screens/ProfileScreen';\nimport CategorySuggestionScreen from '../screens/CategorySuggestionScreen';\nimport BusinessCompetitionScreen from '../screens/BusinessCompetitionScreen';\nimport AdminScreen from '../screens/AdminScreen';\nimport LoadingComponent from '../components/LoadingComponent';\n\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\n\n// Main tab navigator for authenticated users\nfunction MainTabNavigator() {\n  const { userDetails } = useAuth();\n  const isAdmin = userDetails?.role === 'admin';\n  const isBusiness = userDetails?.role === 'business';\n\n  return (\n    <Tab.Navigator\n      screenOptions={{\n        tabBarActiveTintColor: '#3B82F6',\n        tabBarInactiveTintColor: '#9CA3AF',\n        tabBarStyle: {\n          backgroundColor: '#FFFFFF',\n          borderTopWidth: 1,\n          borderTopColor: '#E5E7EB',\n          paddingBottom: 5,\n          paddingTop: 5,\n        },\n        headerShown: false,\n      }}\n    >\n      <Tab.Screen\n        name=\"Home\"\n        component={HomeNavigator}\n        options={{\n          tabBarIcon: ({ color, size }) => (\n            <Feather name=\"home\" color={color} size={size} />\n          ),\n        }}\n      />\n      \n      {isBusiness && (\n        <Tab.Screen\n          name=\"Business\"\n          component={BusinessCompetitionScreen}\n          options={{\n            tabBarIcon: ({ color, size }) => (\n              <Feather name=\"briefcase\" color={color} size={size} />\n            ),\n          }}\n        />\n      )}\n      \n      <Tab.Screen\n        name=\"Categories\"\n        component={CategorySuggestionScreen}\n        options={{\n          tabBarIcon: ({ color, size }) => (\n            <Feather name=\"list\" color={color} size={size} />\n          ),\n        }}\n      />\n      \n      <Tab.Screen\n        name=\"Profile\"\n        component={ProfileScreen}\n        options={{\n          tabBarIcon: ({ color, size }) => (\n            <Feather name=\"user\" color={color} size={size} />\n          ),\n        }}\n      />\n      \n      {isAdmin && (\n        <Tab.Screen\n          name=\"Admin\"\n          component={AdminScreen}\n          options={{\n            tabBarIcon: ({ color, size }) => (\n              <Feather name=\"settings\" color={color} size={size} />\n            ),\n          }}\n        />\n      )}\n    </Tab.Navigator>\n  );\n}\n\n// Stack navigator for home-related screens\nfunction HomeNavigator() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerStyle: {\n          backgroundColor: '#3B82F6',\n        },\n        headerTintColor: '#FFFFFF',\n        headerTitleStyle: {\n          fontWeight: 'bold',\n        },\n      }}\n    >\n      <Stack.Screen\n        name=\"Competitions\"\n        component={HomeScreen}\n        options={{ title: 'Score4Me' }}\n      />\n      <Stack.Screen\n        name=\"CompetitionDetails\"\n        component={CompetitionDetailsScreen}\n        options={({ route }) => ({ title: route.params?.title || 'Competition Details' })}\n      />\n      <Stack.Screen\n        name=\"Submission\"\n        component={SubmissionScreen}\n      />\n    </Stack.Navigator>\n  );\n}\n\n// Root navigator that handles auth flow\nexport default function AppNavigator() {\n  const { user, loading } = useAuth();\n\n  if (loading) {\n    return <LoadingComponent />;\n  }\n\n  return (\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\n      {user ? (\n        <Stack.Screen name=\"Main\" component={MainTabNavigator} />\n      ) : (\n        <Stack.Screen name=\"Auth\" component={AuthScreen} />\n      )}\n    </Stack.Navigator>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}