{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Feather } from '@expo/vector-icons';\nimport supabase from \"../utils/supabaseClient\";\nimport { useAuth } from \"../context/AuthContext\";\nimport SubmissionItem from \"../components/SubmissionItem\";\nimport RatingComponent from \"../components/RatingComponent\";\nimport BusinessFeatures from \"../components/BusinessFeatures\";\nimport { theme, globalStyles } from \"../styles\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background\n  },\n  contentContainer: {\n    padding: 16\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: theme.colors.background\n  },\n  loadingText: {\n    color: theme.colors.gray[600],\n    marginTop: 16\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: theme.colors.background\n  },\n  errorIcon: {\n    color: theme.colors.error\n  },\n  errorText: {\n    fontSize: 18,\n    color: theme.colors.gray[700],\n    marginTop: 16\n  },\n  backButton: {\n    marginTop: 24,\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: 24,\n    paddingVertical: 12,\n    borderRadius: 8\n  },\n  backButtonText: {\n    color: theme.colors.white,\n    fontWeight: '500'\n  },\n  competitionCard: {\n    padding: 16,\n    borderRadius: 8,\n    marginBottom: 16\n  },\n  businessCard: {\n    backgroundColor: '#FEF3C7',\n    borderWidth: 1,\n    borderColor: '#FDE68A'\n  },\n  individualCard: {\n    backgroundColor: '#F5F3FF',\n    borderWidth: 1,\n    borderColor: '#DDD6FE'\n  },\n  cardHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8\n  },\n  typeContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  businessTypeText: {\n    marginLeft: 8,\n    fontWeight: '500',\n    color: '#B45309'\n  },\n  individualTypeText: {\n    marginLeft: 8,\n    fontWeight: '500',\n    color: '#6D28D9'\n  },\n  statusBadge: {\n    paddingHorizontal: 12,\n    paddingVertical: 4,\n    borderRadius: 16\n  },\n  activeBadge: {\n    backgroundColor: '#D1FAE5'\n  },\n  endedBadge: {\n    backgroundColor: '#FEE2E2'\n  },\n  statusText: {\n    fontSize: 12,\n    fontWeight: '500'\n  },\n  activeStatusText: {\n    color: '#065F46'\n  },\n  endedStatusText: {\n    color: '#991B1B'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: theme.colors.gray[800],\n    marginBottom: 8\n  },\n  description: {\n    color: theme.colors.gray[600],\n    marginBottom: 16\n  },\n  metadataContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  metadataItem: {\n    marginRight: 16,\n    marginBottom: 8\n  },\n  metadataLabel: {\n    fontSize: 12,\n    color: theme.colors.gray[500]\n  },\n  metadataValue: {\n    color: theme.colors.gray[800],\n    fontWeight: '500'\n  },\n  submitButton: {\n    backgroundColor: theme.colors.primary,\n    paddingVertical: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginBottom: 24\n  },\n  submitButtonText: {\n    color: theme.colors.white,\n    fontWeight: 'bold',\n    fontSize: 18\n  },\n  submittedContainer: {\n    backgroundColor: '#D1FAE5',\n    padding: 16,\n    borderRadius: 8,\n    marginBottom: 24,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  submittedText: {\n    color: '#065F46',\n    marginLeft: 8,\n    flex: 1\n  },\n  submissionsHeader: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: theme.colors.gray[800],\n    marginBottom: 16\n  },\n  submissionsLoadingContainer: {\n    paddingVertical: 48,\n    alignItems: 'center'\n  },\n  submissionsLoadingText: {\n    color: theme.colors.gray[500],\n    marginTop: 8\n  },\n  emptySubmissionsContainer: {\n    paddingVertical: 48,\n    alignItems: 'center',\n    backgroundColor: theme.colors.white,\n    borderRadius: 8\n  },\n  emptySubmissionsIcon: {\n    color: '#CBD5E1'\n  },\n  emptySubmissionsText: {\n    color: theme.colors.gray[500],\n    marginTop: 16,\n    textAlign: 'center'\n  },\n  submissionContainer: {\n    marginBottom: 16\n  }\n});\nexport default function CompetitionDetailsScreen(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var competitionId = route.params.competitionId;\n  var _useAuth = useAuth(),\n    user = _useAuth.user;\n  var _useWindowDimensions = useWindowDimensions(),\n    width = _useWindowDimensions.width;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    competition = _useState2[0],\n    setCompetition = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    submissions = _useState4[0],\n    setSubmissions = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState(true),\n    _useState8 = _slicedToArray(_useState7, 2),\n    submissionsLoading = _useState8[0],\n    setSubmissionsLoading = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    userHasSubmitted = _useState10[0],\n    setUserHasSubmitted = _useState10[1];\n  useEffect(function () {\n    fetchCompetitionDetails();\n    fetchSubmissions();\n    checkUserSubmission();\n    var submissionsSubscription = supabase.channel('submissions_changes').on('postgres_changes', {\n      event: '*',\n      schema: 'public',\n      table: 'submissions',\n      filter: `competition_id=eq.${competitionId}`\n    }, function (payload) {\n      fetchSubmissions();\n    }).subscribe();\n    return function () {\n      submissionsSubscription.unsubscribe();\n    };\n  }, [competitionId]);\n  var fetchCompetitionDetails = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        var _yield$supabase$from$ = yield supabase.from('competitions').select('*, profiles(username)').eq('id', competitionId).single(),\n          data = _yield$supabase$from$.data,\n          error = _yield$supabase$from$.error;\n        if (error) throw error;\n        setCompetition(data);\n      } catch (error) {\n        console.error('Error fetching competition details:', error);\n        Alert.alert('Error', 'Failed to load competition details');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function fetchCompetitionDetails() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var fetchSubmissions = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        setSubmissionsLoading(true);\n        var _yield$supabase$from$2 = yield supabase.from('submissions').select(`\n          *,\n          profiles(username),\n          ratings(rating, user_id)\n        `).eq('competition_id', competitionId).order('created_at', {\n            ascending: false\n          }),\n          data = _yield$supabase$from$2.data,\n          error = _yield$supabase$from$2.error;\n        if (error) throw error;\n        var submissionsWithAvgRating = data.map(function (submission) {\n          var _ratings$find;\n          var ratings = submission.ratings || [];\n          var avgRating = ratings.length ? ratings.reduce(function (sum, r) {\n            return sum + r.rating;\n          }, 0) / ratings.length : 0;\n          var userRating = ((_ratings$find = ratings.find(function (r) {\n            return r.user_id === (user == null ? void 0 : user.id);\n          })) == null ? void 0 : _ratings$find.rating) || 0;\n          return _objectSpread(_objectSpread({}, submission), {}, {\n            avgRating: parseFloat(avgRating.toFixed(1)),\n            userRating: userRating\n          });\n        });\n        setSubmissions(submissionsWithAvgRating);\n      } catch (error) {\n        console.error('Error fetching submissions:', error);\n        Alert.alert('Error', 'Failed to load submissions');\n      } finally {\n        setSubmissionsLoading(false);\n      }\n    });\n    return function fetchSubmissions() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var checkUserSubmission = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      if (!user) return;\n      try {\n        var _yield$supabase$from$3 = yield supabase.from('submissions').select('id').eq('competition_id', competitionId).eq('user_id', user.id).maybeSingle(),\n          data = _yield$supabase$from$3.data,\n          error = _yield$supabase$from$3.error;\n        if (error) throw error;\n        setUserHasSubmitted(!!data);\n      } catch (error) {\n        console.error('Error checking user submission:', error);\n      }\n    });\n    return function checkUserSubmission() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var handleSubmit = function handleSubmit() {\n    navigation.navigate('Submission', {\n      competitionId: competitionId,\n      competitionTitle: competition == null ? void 0 : competition.title\n    });\n  };\n  var handleRateSubmission = function () {\n    var _ref5 = _asyncToGenerator(function* (submissionId, rating) {\n      if (!user) {\n        Alert.alert('Authentication Required', 'Please log in to rate submissions');\n        return;\n      }\n      try {\n        var _yield$supabase$from$4 = yield supabase.from('ratings').select('id').eq('submission_id', submissionId).eq('user_id', user.id).maybeSingle(),\n          existingRating = _yield$supabase$from$4.data,\n          checkError = _yield$supabase$from$4.error;\n        if (checkError) throw checkError;\n        if (existingRating) {\n          var _yield$supabase$from$5 = yield supabase.from('ratings').update({\n              rating: rating,\n              updated_at: new Date()\n            }).eq('id', existingRating.id),\n            updateError = _yield$supabase$from$5.error;\n          if (updateError) throw updateError;\n        } else {\n          var _yield$supabase$from$6 = yield supabase.from('ratings').insert({\n              submission_id: submissionId,\n              user_id: user.id,\n              rating: rating,\n              created_at: new Date()\n            }),\n            insertError = _yield$supabase$from$6.error;\n          if (insertError) throw insertError;\n        }\n        fetchSubmissions();\n      } catch (error) {\n        console.error('Error rating submission:', error);\n        Alert.alert('Error', 'Failed to save your rating');\n      }\n    });\n    return function handleRateSubmission(_x, _x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  if (loading) {\n    return _jsxs(View, {\n      style: styles.loadingContainer,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: theme.colors.primary\n      }), _jsx(Text, {\n        style: styles.loadingText,\n        children: \"Loading competition details...\"\n      })]\n    });\n  }\n  if (!competition) {\n    return _jsxs(View, {\n      style: styles.errorContainer,\n      children: [_jsx(Feather, {\n        name: \"alert-circle\",\n        size: 60,\n        style: styles.errorIcon\n      }), _jsx(Text, {\n        style: styles.errorText,\n        children: \"Competition not found\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.backButton,\n        onPress: function onPress() {\n          return navigation.goBack();\n        },\n        children: _jsx(Text, {\n          style: styles.backButtonText,\n          children: \"Go Back\"\n        })\n      })]\n    });\n  }\n  var isCompetitionActive = new Date(competition.end_date) > new Date();\n  var isBusiness = competition.type === 'business';\n  return _jsx(ScrollView, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.contentContainer,\n      children: [_jsxs(View, {\n        style: [styles.competitionCard, isBusiness ? styles.businessCard : styles.individualCard],\n        children: [_jsxs(View, {\n          style: styles.cardHeader,\n          children: [_jsxs(View, {\n            style: styles.typeContainer,\n            children: [_jsx(Feather, {\n              name: isBusiness ? 'briefcase' : 'user',\n              size: 20,\n              color: isBusiness ? '#F59E0B' : '#8B5CF6'\n            }), _jsxs(Text, {\n              style: isBusiness ? styles.businessTypeText : styles.individualTypeText,\n              children: [isBusiness ? 'Business' : 'Individual', \" Competition\"]\n            })]\n          }), _jsx(View, {\n            style: [styles.statusBadge, isCompetitionActive ? styles.activeBadge : styles.endedBadge],\n            children: _jsx(Text, {\n              style: [styles.statusText, isCompetitionActive ? styles.activeStatusText : styles.endedStatusText],\n              children: isCompetitionActive ? 'Active' : 'Ended'\n            })\n          })]\n        }), _jsx(Text, {\n          style: styles.title,\n          children: competition.title\n        }), _jsx(Text, {\n          style: styles.description,\n          children: competition.description\n        }), _jsxs(View, {\n          style: styles.metadataContainer,\n          children: [_jsxs(View, {\n            style: styles.metadataItem,\n            children: [_jsx(Text, {\n              style: styles.metadataLabel,\n              children: \"Category\"\n            }), _jsx(Text, {\n              style: styles.metadataValue,\n              children: competition.category\n            })]\n          }), _jsxs(View, {\n            style: styles.metadataItem,\n            children: [_jsx(Text, {\n              style: styles.metadataLabel,\n              children: \"Prize\"\n            }), _jsxs(Text, {\n              style: styles.metadataValue,\n              children: [\"$\", competition.prize_amount]\n            })]\n          }), _jsxs(View, {\n            style: styles.metadataItem,\n            children: [_jsx(Text, {\n              style: styles.metadataLabel,\n              children: \"Start Date\"\n            }), _jsx(Text, {\n              style: styles.metadataValue,\n              children: new Date(competition.start_date).toLocaleDateString()\n            })]\n          }), _jsxs(View, {\n            style: styles.metadataItem,\n            children: [_jsx(Text, {\n              style: styles.metadataLabel,\n              children: \"End Date\"\n            }), _jsx(Text, {\n              style: styles.metadataValue,\n              children: new Date(competition.end_date).toLocaleDateString()\n            })]\n          })]\n        }), isBusiness && competition.product_name && _jsx(BusinessFeatures, {\n          competition: competition\n        })]\n      }), isCompetitionActive && user && !userHasSubmitted && _jsx(TouchableOpacity, {\n        style: styles.submitButton,\n        onPress: handleSubmit,\n        children: _jsx(Text, {\n          style: styles.submitButtonText,\n          children: \"Submit Your Entry\"\n        })\n      }), userHasSubmitted && _jsxs(View, {\n        style: styles.submittedContainer,\n        children: [_jsx(Feather, {\n          name: \"check-circle\",\n          size: 20,\n          color: \"#10B981\"\n        }), _jsx(Text, {\n          style: styles.submittedText,\n          children: \"You've already submitted an entry to this competition.\"\n        })]\n      }), _jsxs(View, {\n        children: [_jsxs(Text, {\n          style: styles.submissionsHeader,\n          children: [\"Submissions (\", submissions.length, \")\"]\n        }), submissionsLoading ? _jsxs(View, {\n          style: styles.submissionsLoadingContainer,\n          children: [_jsx(ActivityIndicator, {\n            size: \"small\",\n            color: theme.colors.primary\n          }), _jsx(Text, {\n            style: styles.submissionsLoadingText,\n            children: \"Loading submissions...\"\n          })]\n        }) : submissions.length === 0 ? _jsxs(View, {\n          style: styles.emptySubmissionsContainer,\n          children: [_jsx(Feather, {\n            name: \"inbox\",\n            size: 48,\n            style: styles.emptySubmissionsIcon\n          }), _jsx(Text, {\n            style: styles.emptySubmissionsText,\n            children: \"No submissions yet. Be the first to submit!\"\n          })]\n        }) : submissions.map(function (submission) {\n          return _jsxs(View, {\n            style: styles.submissionContainer,\n            children: [_jsx(SubmissionItem, {\n              submission: submission\n            }), _jsx(RatingComponent, {\n              userRating: submission.userRating,\n              avgRating: submission.avgRating,\n              totalRatings: submission.ratings ? submission.ratings.length : 0,\n              onRate: function onRate(rating) {\n                return handleRateSubmission(submission.id, rating);\n              },\n              disabled: submission.user_id === (user == null ? void 0 : user.id) || !isCompetitionActive\n            })]\n          }, submission.id);\n        })]\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","View","Text","ScrollView","TouchableOpacity","Alert","ActivityIndicator","Image","useWindowDimensions","StyleSheet","Feather","supabase","useAuth","SubmissionItem","RatingComponent","BusinessFeatures","theme","globalStyles","jsx","_jsx","jsxs","_jsxs","styles","create","container","flex","backgroundColor","colors","background","contentContainer","padding","loadingContainer","justifyContent","alignItems","loadingText","color","gray","marginTop","errorContainer","errorIcon","error","errorText","fontSize","backButton","primary","paddingHorizontal","paddingVertical","borderRadius","backButtonText","white","fontWeight","competitionCard","marginBottom","businessCard","borderWidth","borderColor","individualCard","cardHeader","flexDirection","typeContainer","businessTypeText","marginLeft","individualTypeText","statusBadge","activeBadge","endedBadge","statusText","activeStatusText","endedStatusText","title","description","metadataContainer","flexWrap","metadataItem","marginRight","metadataLabel","metadataValue","submitButton","submitButtonText","submittedContainer","submittedText","submissionsHeader","submissionsLoadingContainer","submissionsLoadingText","emptySubmissionsContainer","emptySubmissionsIcon","emptySubmissionsText","textAlign","submissionContainer","CompetitionDetailsScreen","_ref","route","navigation","competitionId","params","_useAuth","user","_useWindowDimensions","width","_useState","_useState2","_slicedToArray","competition","setCompetition","_useState3","_useState4","submissions","setSubmissions","_useState5","_useState6","loading","setLoading","_useState7","_useState8","submissionsLoading","setSubmissionsLoading","_useState9","_useState10","userHasSubmitted","setUserHasSubmitted","fetchCompetitionDetails","fetchSubmissions","checkUserSubmission","submissionsSubscription","channel","on","event","schema","table","filter","payload","subscribe","unsubscribe","_ref2","_asyncToGenerator","_yield$supabase$from$","from","select","eq","single","data","console","alert","apply","arguments","_ref3","_yield$supabase$from$2","order","ascending","submissionsWithAvgRating","map","submission","_ratings$find","ratings","avgRating","length","reduce","sum","r","rating","userRating","find","user_id","id","_objectSpread","parseFloat","toFixed","_ref4","_yield$supabase$from$3","maybeSingle","handleSubmit","navigate","competitionTitle","handleRateSubmission","_ref5","submissionId","_yield$supabase$from$4","existingRating","checkError","_yield$supabase$from$5","update","updated_at","Date","updateError","_yield$supabase$from$6","insert","submission_id","created_at","insertError","_x","_x2","style","children","size","name","onPress","goBack","isCompetitionActive","end_date","isBusiness","type","category","prize_amount","start_date","toLocaleDateString","product_name","totalRatings","onRate","disabled"],"sources":["/home/runner/workspace/src/screens/CompetitionDetailsScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  ScrollView,\n  TouchableOpacity,\n  Alert,\n  ActivityIndicator,\n  Image,\n  useWindowDimensions,\n  StyleSheet,\n} from 'react-native';\nimport { Feather } from '@expo/vector-icons';\nimport supabase from '../utils/supabaseClient';\nimport { useAuth } from '../context/AuthContext';\nimport SubmissionItem from '../components/SubmissionItem';\nimport RatingComponent from '../components/RatingComponent';\nimport BusinessFeatures from '../components/BusinessFeatures';\nimport { theme, globalStyles } from '../styles';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n  },\n  contentContainer: {\n    padding: 16,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: theme.colors.background,\n  },\n  loadingText: {\n    color: theme.colors.gray[600],\n    marginTop: 16,\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: theme.colors.background,\n  },\n  errorIcon: {\n    color: theme.colors.error,\n  },\n  errorText: {\n    fontSize: 18,\n    color: theme.colors.gray[700],\n    marginTop: 16,\n  },\n  backButton: {\n    marginTop: 24,\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: 24,\n    paddingVertical: 12,\n    borderRadius: 8,\n  },\n  backButtonText: {\n    color: theme.colors.white,\n    fontWeight: '500',\n  },\n  competitionCard: {\n    padding: 16,\n    borderRadius: 8,\n    marginBottom: 16,\n  },\n  businessCard: {\n    backgroundColor: '#FEF3C7', // amber-50\n    borderWidth: 1,\n    borderColor: '#FDE68A', // amber-200\n  },\n  individualCard: {\n    backgroundColor: '#F5F3FF', // purple-50\n    borderWidth: 1,\n    borderColor: '#DDD6FE', // purple-200\n  },\n  cardHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  typeContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  businessTypeText: {\n    marginLeft: 8,\n    fontWeight: '500',\n    color: '#B45309', // amber-700\n  },\n  individualTypeText: {\n    marginLeft: 8,\n    fontWeight: '500',\n    color: '#6D28D9', // purple-700\n  },\n  statusBadge: {\n    paddingHorizontal: 12,\n    paddingVertical: 4,\n    borderRadius: 16,\n  },\n  activeBadge: {\n    backgroundColor: '#D1FAE5', // green-100\n  },\n  endedBadge: {\n    backgroundColor: '#FEE2E2', // red-100\n  },\n  statusText: {\n    fontSize: 12,\n    fontWeight: '500',\n  },\n  activeStatusText: {\n    color: '#065F46', // green-800\n  },\n  endedStatusText: {\n    color: '#991B1B', // red-800\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: theme.colors.gray[800],\n    marginBottom: 8,\n  },\n  description: {\n    color: theme.colors.gray[600],\n    marginBottom: 16,\n  },\n  metadataContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  metadataItem: {\n    marginRight: 16,\n    marginBottom: 8,\n  },\n  metadataLabel: {\n    fontSize: 12,\n    color: theme.colors.gray[500],\n  },\n  metadataValue: {\n    color: theme.colors.gray[800],\n    fontWeight: '500',\n  },\n  submitButton: {\n    backgroundColor: theme.colors.primary,\n    paddingVertical: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginBottom: 24,\n  },\n  submitButtonText: {\n    color: theme.colors.white,\n    fontWeight: 'bold',\n    fontSize: 18,\n  },\n  submittedContainer: {\n    backgroundColor: '#D1FAE5', // green-100\n    padding: 16,\n    borderRadius: 8,\n    marginBottom: 24,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  submittedText: {\n    color: '#065F46', // green-800\n    marginLeft: 8,\n    flex: 1,\n  },\n  submissionsHeader: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: theme.colors.gray[800],\n    marginBottom: 16,\n  },\n  submissionsLoadingContainer: {\n    paddingVertical: 48,\n    alignItems: 'center',\n  },\n  submissionsLoadingText: {\n    color: theme.colors.gray[500],\n    marginTop: 8,\n  },\n  emptySubmissionsContainer: {\n    paddingVertical: 48,\n    alignItems: 'center',\n    backgroundColor: theme.colors.white,\n    borderRadius: 8,\n  },\n  emptySubmissionsIcon: {\n    color: '#CBD5E1', // slate-300\n  },\n  emptySubmissionsText: {\n    color: theme.colors.gray[500],\n    marginTop: 16,\n    textAlign: 'center',\n  },\n  submissionContainer: {\n    marginBottom: 16,\n  },\n});\n\nexport default function CompetitionDetailsScreen({ route, navigation }) {\n  const { competitionId } = route.params;\n  const { user } = useAuth();\n  const { width } = useWindowDimensions();\n  \n  const [competition, setCompetition] = useState(null);\n  const [submissions, setSubmissions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [submissionsLoading, setSubmissionsLoading] = useState(true);\n  const [userHasSubmitted, setUserHasSubmitted] = useState(false);\n  \n  useEffect(() => {\n    fetchCompetitionDetails();\n    fetchSubmissions();\n    checkUserSubmission();\n    \n    // Subscribe to real-time updates for submissions\n    const submissionsSubscription = supabase\n      .channel('submissions_changes')\n      .on('postgres_changes', { \n        event: '*', \n        schema: 'public', \n        table: 'submissions',\n        filter: `competition_id=eq.${competitionId}`\n      }, (payload) => {\n        fetchSubmissions();\n      })\n      .subscribe();\n      \n    return () => {\n      submissionsSubscription.unsubscribe();\n    };\n  }, [competitionId]);\n  \n  const fetchCompetitionDetails = async () => {\n    try {\n      setLoading(true);\n      const { data, error } = await supabase\n        .from('competitions')\n        .select('*, profiles(username)')\n        .eq('id', competitionId)\n        .single();\n        \n      if (error) throw error;\n      setCompetition(data);\n    } catch (error) {\n      console.error('Error fetching competition details:', error);\n      Alert.alert('Error', 'Failed to load competition details');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const fetchSubmissions = async () => {\n    try {\n      setSubmissionsLoading(true);\n      const { data, error } = await supabase\n        .from('submissions')\n        .select(`\n          *,\n          profiles(username),\n          ratings(rating, user_id)\n        `)\n        .eq('competition_id', competitionId)\n        .order('created_at', { ascending: false });\n        \n      if (error) throw error;\n      \n      // Calculate average ratings for each submission\n      const submissionsWithAvgRating = data.map(submission => {\n        const ratings = submission.ratings || [];\n        const avgRating = ratings.length \n          ? ratings.reduce((sum, r) => sum + r.rating, 0) / ratings.length \n          : 0;\n        \n        // Check if the current user has rated this submission\n        const userRating = ratings.find(r => r.user_id === user?.id)?.rating || 0;\n        \n        return { \n          ...submission, \n          avgRating: parseFloat(avgRating.toFixed(1)),\n          userRating\n        };\n      });\n      \n      setSubmissions(submissionsWithAvgRating);\n    } catch (error) {\n      console.error('Error fetching submissions:', error);\n      Alert.alert('Error', 'Failed to load submissions');\n    } finally {\n      setSubmissionsLoading(false);\n    }\n  };\n  \n  const checkUserSubmission = async () => {\n    if (!user) return;\n    \n    try {\n      const { data, error } = await supabase\n        .from('submissions')\n        .select('id')\n        .eq('competition_id', competitionId)\n        .eq('user_id', user.id)\n        .maybeSingle();\n        \n      if (error) throw error;\n      setUserHasSubmitted(!!data);\n    } catch (error) {\n      console.error('Error checking user submission:', error);\n    }\n  };\n  \n  const handleSubmit = () => {\n    navigation.navigate('Submission', { \n      competitionId, \n      competitionTitle: competition?.title \n    });\n  };\n  \n  const handleRateSubmission = async (submissionId, rating) => {\n    if (!user) {\n      Alert.alert('Authentication Required', 'Please log in to rate submissions');\n      return;\n    }\n    \n    try {\n      // Check if user has already rated this submission\n      const { data: existingRating, error: checkError } = await supabase\n        .from('ratings')\n        .select('id')\n        .eq('submission_id', submissionId)\n        .eq('user_id', user.id)\n        .maybeSingle();\n        \n      if (checkError) throw checkError;\n      \n      if (existingRating) {\n        // Update existing rating\n        const { error: updateError } = await supabase\n          .from('ratings')\n          .update({ rating, updated_at: new Date() })\n          .eq('id', existingRating.id);\n          \n        if (updateError) throw updateError;\n      } else {\n        // Insert new rating\n        const { error: insertError } = await supabase\n          .from('ratings')\n          .insert({\n            submission_id: submissionId,\n            user_id: user.id,\n            rating,\n            created_at: new Date()\n          });\n          \n        if (insertError) throw insertError;\n      }\n      \n      // Refresh submissions to update ratings\n      fetchSubmissions();\n    } catch (error) {\n      console.error('Error rating submission:', error);\n      Alert.alert('Error', 'Failed to save your rating');\n    }\n  };\n  \n  if (loading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n        <Text style={styles.loadingText}>Loading competition details...</Text>\n      </View>\n    );\n  }\n  \n  if (!competition) {\n    return (\n      <View style={styles.errorContainer}>\n        <Feather name=\"alert-circle\" size={60} style={styles.errorIcon} />\n        <Text style={styles.errorText}>Competition not found</Text>\n        <TouchableOpacity\n          style={styles.backButton}\n          onPress={() => navigation.goBack()}\n        >\n          <Text style={styles.backButtonText}>Go Back</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n  \n  const isCompetitionActive = new Date(competition.end_date) > new Date();\n  const isBusiness = competition.type === 'business';\n  \n  return (\n    <ScrollView style={styles.container}>\n      <View style={styles.contentContainer}>\n        {/* Competition header */}\n        <View style={[\n          styles.competitionCard,\n          isBusiness ? styles.businessCard : styles.individualCard\n        ]}>\n          <View style={styles.cardHeader}>\n            <View style={styles.typeContainer}>\n              <Feather \n                name={isBusiness ? 'briefcase' : 'user'} \n                size={20} \n                color={isBusiness ? '#F59E0B' : '#8B5CF6'} \n              />\n              <Text style={isBusiness ? styles.businessTypeText : styles.individualTypeText}>\n                {isBusiness ? 'Business' : 'Individual'} Competition\n              </Text>\n            </View>\n            <View style={[\n              styles.statusBadge,\n              isCompetitionActive ? styles.activeBadge : styles.endedBadge\n            ]}>\n              <Text style={[\n                styles.statusText,\n                isCompetitionActive ? styles.activeStatusText : styles.endedStatusText\n              ]}>\n                {isCompetitionActive ? 'Active' : 'Ended'}\n              </Text>\n            </View>\n          </View>\n          \n          <Text style={styles.title}>\n            {competition.title}\n          </Text>\n          \n          <Text style={styles.description}>\n            {competition.description}\n          </Text>\n          \n          <View style={styles.metadataContainer}>\n            <View style={styles.metadataItem}>\n              <Text style={styles.metadataLabel}>Category</Text>\n              <Text style={styles.metadataValue}>{competition.category}</Text>\n            </View>\n            \n            <View style={styles.metadataItem}>\n              <Text style={styles.metadataLabel}>Prize</Text>\n              <Text style={styles.metadataValue}>${competition.prize_amount}</Text>\n            </View>\n            \n            <View style={styles.metadataItem}>\n              <Text style={styles.metadataLabel}>Start Date</Text>\n              <Text style={styles.metadataValue}>\n                {new Date(competition.start_date).toLocaleDateString()}\n              </Text>\n            </View>\n            \n            <View style={styles.metadataItem}>\n              <Text style={styles.metadataLabel}>End Date</Text>\n              <Text style={styles.metadataValue}>\n                {new Date(competition.end_date).toLocaleDateString()}\n              </Text>\n            </View>\n          </View>\n          \n          {isBusiness && competition.product_name && (\n            <BusinessFeatures competition={competition} />\n          )}\n        </View>\n        \n        {/* Submit button */}\n        {isCompetitionActive && user && !userHasSubmitted && (\n          <TouchableOpacity\n            style={styles.submitButton}\n            onPress={handleSubmit}\n          >\n            <Text style={styles.submitButtonText}>Submit Your Entry</Text>\n          </TouchableOpacity>\n        )}\n        \n        {userHasSubmitted && (\n          <View style={styles.submittedContainer}>\n            <Feather name=\"check-circle\" size={20} color=\"#10B981\" />\n            <Text style={styles.submittedText}>\n              You've already submitted an entry to this competition.\n            </Text>\n          </View>\n        )}\n        \n        {/* Submissions section */}\n        <View>\n          <Text style={styles.submissionsHeader}>\n            Submissions ({submissions.length})\n          </Text>\n          \n          {submissionsLoading ? (\n            <View style={styles.submissionsLoadingContainer}>\n              <ActivityIndicator size=\"small\" color={theme.colors.primary} />\n              <Text style={styles.submissionsLoadingText}>Loading submissions...</Text>\n            </View>\n          ) : submissions.length === 0 ? (\n            <View style={styles.emptySubmissionsContainer}>\n              <Feather name=\"inbox\" size={48} style={styles.emptySubmissionsIcon} />\n              <Text style={styles.emptySubmissionsText}>\n                No submissions yet. Be the first to submit!\n              </Text>\n            </View>\n          ) : (\n            submissions.map((submission) => (\n              <View key={submission.id} style={styles.submissionContainer}>\n                <SubmissionItem submission={submission} />\n                <RatingComponent\n                  userRating={submission.userRating}\n                  avgRating={submission.avgRating}\n                  totalRatings={submission.ratings ? submission.ratings.length : 0}\n                  onRate={(rating) => handleRateSubmission(submission.id, rating)}\n                  disabled={submission.user_id === user?.id || !isCompetitionActive}\n                />\n              </View>\n            ))\n          )}\n        </View>\n      </View>\n    </ScrollView>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}